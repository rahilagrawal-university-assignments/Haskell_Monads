
==================== FINAL INTERFACE ====================
2019-08-04 10:22:40.142947 UTC

interface main@main:Tests.Transcript 8002
  interface hash: 78a09d80f5852a8f6106a9a947843bc5
  ABI hash: 7d588b798767ea443ee514de569fa1d4
  export-list hash: 320cb2144b67cf9fe1af07b49645e96b
  orphan hash: 4162f8afb14d0e9cdcf7a1f4dc652c43
  flag hash: faaa1228943affca5c44c341604713cf
  sig of: Nothing
  used TH splices: False
  where
exports:
  Tests.Transcript.reCourseCodes
  Tests.Transcript.reCourseCodesRaw
  Tests.Transcript.reDecimalNumber
  Tests.Transcript.reGradeRecords
  Tests.Transcript.reGrades
  Tests.Transcript.reGradesAlt
  Tests.Transcript.reGradesRaw
  Tests.Transcript.reStars
  Tests.Transcript.reStudentNumber
  Tests.Transcript.reTortoiseCourseCodes
  Tests.Transcript.test_courseCodes
  Tests.Transcript.test_courseCodesRaw
  Tests.Transcript.test_decimalNumber
  Tests.Transcript.test_empty
  Tests.Transcript.test_fail
  Tests.Transcript.test_firstname
  Tests.Transcript.test_gradeRecords
  Tests.Transcript.test_grades
  Tests.Transcript.test_gradesAlt
  Tests.Transcript.test_gradesRaw
  Tests.Transcript.test_stars
  Tests.Transcript.test_studentNumber
  Tests.Transcript.test_tortoiseCourseCodes
  Tests.Transcript.transcriptCodes
  Tests.Transcript.transcriptDecimalNumbers
  Tests.Transcript.transcriptGradeRecords
  Tests.Transcript.transcriptGrades
  Tests.Transcript.GradeRecord{Tests.Transcript.R}
module dependencies: Hare HareMonad Tests.Support
package dependencies: ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-A79v826bgPr574HtaZPPqC
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      clock-0.7.2@clock-0.7.2-8dRNleB7rysIZAOReuhpZA
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-EqIYOWOFTvf23sT5QTYn9U
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      process-1.4.3.0@process-1.4.3.0
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tasty-0.11.3@tasty-0.11.3-70FgRohyKVSBrTVBDiKym5
                      tasty-hunit-0.9.2@tasty-hunit-0.9.2-Rlwyh85h61dqrsDptS53
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unbounded-delays-0.1.1.0@unbounded-delays-0.1.1.0-8pvOsE97fmS7WDAN5vUbqX
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.String
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         clock-0.7.2@clock-0.7.2-8dRNleB7rysIZAOReuhpZA:System.Clock
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         tasty-0.11.3@tasty-0.11.3-70FgRohyKVSBrTVBDiKym5:Test.Tasty.Core
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  Hare 11294f6e6ac2c341243a25195049eca6
  exports: 3f0d67ee01e33a7610568b1d92b67a2e
  Action 4388decac9780b950aa2cde5c74aa9ef
  Char e398ed7ae80d873cc0ab855976960f98
  Choose 71c1b001856810c6a9dbeaf7c71fade6
  Empty dcbc5fe7c00b84aec286fcdf1ad29000
  Fail cb873987642943b9ca3d0016c10dcc98
  RE 02a5be124d271155c17e6f84c5d883ca
  Seq 7cadc1bd046c61aeb71552ed8bd31603
  Star 577d5433495ac7fc97fe684cde829ba7
  choose a1e6916c795090c0491fc485d2f2bd5e
  option 12cc7b5d279214251776991cef234f32
  plus 29cd0d09ae97efcdd53885087c2945b1
  rpt a52d5c74b5bc00ac8c69931d717ee32e
  rptRange b3d5b6d2a42a31691922df5115ee78f7
  string 2c119340b74b059fcf8b770a6831df64
import  -/  Tests.Support 5ae1c62e50edd2631b4ea2cc63600290
  exports: b7680154d110a017de07e37fd87e95c0
  testRE 4152cc1e7882b0df25fa9d49dd26d20b
41a1b3577fdec78c2161f807834e7fc8
  $fEqGradeRecord :: GHC.Classes.Eq Tests.Transcript.GradeRecord
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Tests.Transcript.GradeRecord
                  Tests.Transcript.$fEqGradeRecord_$c==
                  Tests.Transcript.$fEqGradeRecord_$c/= -}
41a1b3577fdec78c2161f807834e7fc8
  $fEqGradeRecord_$c/= ::
    Tests.Transcript.GradeRecord
    -> Tests.Transcript.GradeRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Tests.Transcript.GradeRecord)
                   (b :: Tests.Transcript.GradeRecord) ->
                 case Tests.Transcript.$fEqGradeRecord_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41a1b3577fdec78c2161f807834e7fc8
  $fEqGradeRecord_$c== ::
    Tests.Transcript.GradeRecord
    -> Tests.Transcript.GradeRecord -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Tests.Transcript.GradeRecord)
                   (w1 :: Tests.Transcript.GradeRecord) ->
                 case w of ww { Tests.Transcript.R ww1 ww2 ww3 ->
                 case w1 of ww4 { Tests.Transcript.R ww5 ww6 ww7 ->
                 Tests.Transcript.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
41a1b3577fdec78c2161f807834e7fc8
  $fShowGradeRecord :: GHC.Show.Show Tests.Transcript.GradeRecord
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Tests.Transcript.GradeRecord
                  Tests.Transcript.$fShowGradeRecord_$cshowsPrec
                  Tests.Transcript.$fShowGradeRecord_$cshow
                  Tests.Transcript.$fShowGradeRecord_$cshowList -}
41a1b3577fdec78c2161f807834e7fc8
  $fShowGradeRecord1 ::
    Tests.Transcript.GradeRecord -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Tests.Transcript.GradeRecord) ->
                 case w of ww { Tests.Transcript.R ww1 ww2 ww3 ->
                 Tests.Transcript.$w$cshowsPrec 0# ww1 ww2 ww3 }) -}
0eda97c0c824e446f2d97435cff5b6da
  $fShowGradeRecord2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "R "#) -}
55926db737f69aadf3734bfdd7e76e2d
  $fShowGradeRecord3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
41a1b3577fdec78c2161f807834e7fc8
  $fShowGradeRecord_$cshow ::
    Tests.Transcript.GradeRecord -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Tests.Transcript.GradeRecord) ->
                 Tests.Transcript.$fShowGradeRecord_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41a1b3577fdec78c2161f807834e7fc8
  $fShowGradeRecord_$cshowList ::
    [Tests.Transcript.GradeRecord] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.$fShowGradeRecord1) -}
41a1b3577fdec78c2161f807834e7fc8
  $fShowGradeRecord_$cshowsPrec ::
    GHC.Types.Int -> Tests.Transcript.GradeRecord -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Tests.Transcript.GradeRecord) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Tests.Transcript.R ww3 ww4 ww5 ->
                 Tests.Transcript.$w$cshowsPrec ww1 ww3 ww4 ww5 } }) -}
269b72115c396992c8063bcc65fb6f8e
  $s$fEq(,) :: GHC.Classes.Eq (GHC.Types.Char, [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Char, [GHC.Types.Char])
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Char
                     @ [GHC.Types.Char]
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEq[]_$s$fEq[]1)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Types.Char
                     @ [GHC.Types.Char]
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEq[]_$s$fEq[]1) -}
73e58e26d4f8c49c846cbe2554079450
  $s$fEq(,)1 :: GHC.Classes.Eq (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Char, GHC.Types.Char)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Char
                     @ GHC.Types.Char
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEqChar)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Types.Char
                     @ GHC.Types.Char
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEqChar) -}
a766c751a604c17b7cfa415b84fcd6fe
  $s$fEq(,)2 ::
    GHC.Classes.Eq ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                  (GHC.Classes.$fEq(,)_$c==
                     @ (GHC.Types.Char, GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq
                     GHC.Classes.$fEqChar)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ (GHC.Types.Char, GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq
                     GHC.Classes.$fEqChar) -}
ca88f340033d538e03f475a10a902125
  $s$fEq(,)3 ::
    GHC.Classes.Eq
      (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
       GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Classes.$fEq(,)_$c==
                     @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq1
                     GHC.Classes.$fEqChar)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq1
                     GHC.Classes.$fEqChar) -}
1cc38293d44a4446a5f3a0c691edea64
  $s$fEq(,)4 ::
    GHC.Classes.Eq
      ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Classes.$fEq(,)_$c==
                     @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq2
                     GHC.Classes.$fEqChar)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq2
                     GHC.Classes.$fEqChar) -}
522e49ef9abf16b41f72f1532ed5031b
  $s$fEq(,)5 ::
    GHC.Classes.Eq
      (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Classes.$fEq(,)_$c==
                     @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq3
                     GHC.Classes.$fEqChar)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq3
                     GHC.Classes.$fEqChar) -}
8e2aa0decc3335c84c93a8d550bdd154
  $s$fEq(,)6 ::
    GHC.Classes.Eq
      ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Classes.$fEq(,)_$c==
                     @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq4
                     GHC.Classes.$fEqChar)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq4
                     GHC.Classes.$fEqChar) -}
f17735a3f2fe0235b4cddb1bc4764f7a
  $s$fEq(,)7 ::
    GHC.Classes.Eq
      (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
           GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Classes.$fEq(,)_$c==
                     @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq5
                     GHC.Classes.$fEqChar)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fEq(,)_$dEq5
                     GHC.Classes.$fEqChar) -}
6e52be3f0d1d849000974d6b9a51758e
  $s$fEq(,)_$dEq :: GHC.Classes.Eq (GHC.Types.Char, GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fEq(,)1 -}
539979ce2e4dcc48596302b36755cd67
  $s$fEq(,)_$dEq1 ::
    GHC.Classes.Eq ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fEq(,)2 -}
eb94c69cd0d8a791f665a77052da335b
  $s$fEq(,)_$dEq2 ::
    GHC.Classes.Eq
      (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fEq(,)3 -}
93daeb5a309258735ec4dee50fb7579d
  $s$fEq(,)_$dEq3 ::
    GHC.Classes.Eq
      ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fEq(,)4 -}
92ff0c187d1e26ccd1aeb805d0f8e17d
  $s$fEq(,)_$dEq4 ::
    GHC.Classes.Eq
      (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fEq(,)5 -}
112bdc1e188adeda7e17654ecd6a1c67
  $s$fEq(,)_$dEq5 ::
    GHC.Classes.Eq
      ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fEq(,)6 -}
389d37d2a4bfd2b5bc51cb586d67dff2
  $s$fShow(,) :: GHC.Show.Show (GHC.Types.Char, [GHC.Types.Char])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Char, [GHC.Types.Char])
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Char
                     @ [GHC.Types.Char]
                     GHC.Show.$fShowChar
                     GHC.Show.$fShow[]_$s$fShow[]1)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList -}
290d141e2bb4fb34defe7c14262d08a1
  $s$fShow(,)1 :: GHC.Show.Show (GHC.Types.Char, GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Char, GHC.Types.Char)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Char
                     @ GHC.Types.Char
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowChar)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow1
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList1 -}
139458b39bef5202cc3127bb30d2119c
  $s$fShow(,)2 ::
    GHC.Show.Show ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ (GHC.Types.Char, GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fShow(,)_$dShow
                     GHC.Show.$fShowChar)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow2
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList2 -}
10ccf577ebb6567ae3986074519b6e50
  $s$fShow(,)3 ::
    GHC.Show.Show
      (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fShow(,)_$dShow1
                     GHC.Show.$fShowChar)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow3
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList3 -}
eb4aa9e982d7272aef88148299be1b43
  $s$fShow(,)4 ::
    GHC.Show.Show
      ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fShow(,)_$dShow2
                     GHC.Show.$fShowChar)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow4
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList4 -}
6834379772ba24029481ef787e851528
  $s$fShow(,)5 ::
    GHC.Show.Show
      (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fShow(,)_$dShow3
                     GHC.Show.$fShowChar)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow5
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList5 -}
f552f82354aaa06eb57638a0adb9ca0e
  $s$fShow(,)6 ::
    GHC.Show.Show
      ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fShow(,)_$dShow4
                     GHC.Show.$fShowChar)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow6
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList6 -}
faba3d73de1d801b743df0156e4782ab
  $s$fShow(,)7 ::
    GHC.Show.Show
      (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
           GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char),
                     GHC.Types.Char)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     Tests.Transcript.$s$fShow(,)_$dShow5
                     GHC.Show.$fShowChar)
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow7
                  Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList7 -}
1de7cd632df92f1edcea496adfad0493
  $s$fShow(,)_$dShow ::
    GHC.Show.Show (GHC.Types.Char, GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fShow(,)1 -}
5dd350a3d050b9d1bc1d3e4fd5b210dc
  $s$fShow(,)_$dShow1 ::
    GHC.Show.Show ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fShow(,)2 -}
951d1cf50aa4cb6d8545803645337392
  $s$fShow(,)_$dShow2 ::
    GHC.Show.Show
      (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fShow(,)3 -}
c104affc51e78461cac55dbda953b885
  $s$fShow(,)_$dShow3 ::
    GHC.Show.Show
      ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fShow(,)4 -}
8c0424b1553cfe1d24360ffacd4d09fa
  $s$fShow(,)_$dShow4 ::
    GHC.Show.Show
      (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fShow(,)5 -}
516e2b88848108d01c3ac352f3967ba4
  $s$fShow(,)_$dShow5 ::
    GHC.Show.Show
      ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Tests.Transcript.$s$fShow(,)6 -}
4ae43f08c1e3777bb1592a94a232f019
  $s$fShow(,)_$s$fShow(,)_$cshow ::
    (GHC.Types.Char, [GHC.Types.Char]) -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Types.Char, [GHC.Types.Char])) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Types.Char
                   @ [GHC.Types.Char]
                   GHC.Show.$fShowChar
                   GHC.Show.$fShow[]_$s$fShow[]1
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
582d33b78350af0c9be779827c8f6933
  $s$fShow(,)_$s$fShow(,)_$cshow1 ::
    (GHC.Types.Char, GHC.Types.Char) -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Types.Char, GHC.Types.Char)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowChar
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d30c9426f43a6b6555905ed6c58fbe5a
  $s$fShow(,)_$s$fShow(,)_$cshow2 ::
    ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U(U),U(U)),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   Tests.Transcript.$s$fShow(,)_$dShow
                   GHC.Show.$fShowChar
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ac0051d6159c179f0988cd9f94669d30
  $s$fShow(,)_$s$fShow(,)_$cshow3 ::
    (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
     GHC.Types.Char)
    -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(1*U(U),U(U)),U(U)),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                   @ GHC.Types.Char
                   Tests.Transcript.$s$fShow(,)_$dShow1
                   GHC.Show.$fShowChar
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
514c396a050d8e39eb8256230ccea31c
  $s$fShow(,)_$s$fShow(,)_$cshow4 ::
    ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
      GHC.Types.Char),
     GHC.Types.Char)
    -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(1*U(1*U(U),U(U)),U(U)),U(U)),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   Tests.Transcript.$s$fShow(,)_$dShow2
                   GHC.Show.$fShowChar
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
22009aebd61d44775a31bc8defe4d12f
  $s$fShow(,)_$s$fShow(,)_$cshow5 ::
    (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char),
     GHC.Types.Char)
    -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(1*U(1*U(1*U(U),U(U)),U(U)),U(U)),U(U)),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   Tests.Transcript.$s$fShow(,)_$dShow3
                   GHC.Show.$fShowChar
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
07797145b83bb098907615619559b737
  $s$fShow(,)_$s$fShow(,)_$cshow6 ::
    ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char),
     GHC.Types.Char)
    -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(1*U(1*U(1*U(1*U(U),U(U)),U(U)),U(U)),U(U)),U(U)),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                             GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   Tests.Transcript.$s$fShow(,)_$dShow4
                   GHC.Show.$fShowChar
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
21fe67267a3022ffb920a8b5437beb4c
  $s$fShow(,)_$s$fShow(,)_$cshow7 ::
    (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char),
     GHC.Types.Char)
    -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(U),U(U)),U(U)),U(U)),U(U)),U(U)),U(U)),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                              GHC.Types.Char),
                             GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   Tests.Transcript.$s$fShow(,)_$dShow5
                   GHC.Show.$fShowChar
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fa9ffc80c38c3c1f98a23332b74b778e
  $s$fShow(,)_$s$fShow(,)_$cshowList ::
    [(GHC.Types.Char, [GHC.Types.Char])] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Types.Char, [GHC.Types.Char])])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Types.Char
                      @ [GHC.Types.Char]
                      GHC.Show.$fShowChar
                      GHC.Show.$fShow[]_$s$fShow[]1
                      GHC.Show.shows22)
                   eta
                   eta1) -}
77c69eaa19d009d1adf75ed6dea3f63a
  $s$fShow(,)_$s$fShow(,)_$cshowList1 ::
    [(GHC.Types.Char, GHC.Types.Char)] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Types.Char, GHC.Types.Char)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Types.Char, GHC.Types.Char)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Types.Char
                      @ GHC.Types.Char
                      GHC.Show.$fShowChar
                      GHC.Show.$fShowChar
                      GHC.Show.shows22)
                   eta
                   eta1) -}
c02b08cd1de42be9ecd820020b9ef314
  $s$fShow(,)_$s$fShow(,)_$cshowList2 ::
    [((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ (GHC.Types.Char, GHC.Types.Char)
                      @ GHC.Types.Char
                      Tests.Transcript.$s$fShow(,)_$dShow
                      GHC.Show.$fShowChar
                      GHC.Show.shows22)
                   eta
                   eta1) -}
52bb76203c4022ef89b0e0df2384c0e6
  $s$fShow(,)_$s$fShow(,)_$cshowList3 ::
    [(((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
      GHC.Types.Char)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                             GHC.Types.Char)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                      GHC.Types.Char)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                      @ GHC.Types.Char
                      Tests.Transcript.$s$fShow(,)_$dShow1
                      GHC.Show.$fShowChar
                      GHC.Show.shows22)
                   eta
                   eta1) -}
fa34274a3a8b59022281a5d6f534ff56
  $s$fShow(,)_$s$fShow(,)_$cshowList4 ::
    [((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                              GHC.Types.Char),
                             GHC.Types.Char)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      Tests.Transcript.$s$fShow(,)_$dShow2
                      GHC.Show.$fShowChar
                      GHC.Show.shows22)
                   eta
                   eta1) -}
1c23b5036f7afa3ee832f6e741e1c9ba
  $s$fShow(,)_$s$fShow(,)_$cshowList5 ::
    [(((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                               GHC.Types.Char),
                              GHC.Types.Char),
                             GHC.Types.Char)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      Tests.Transcript.$s$fShow(,)_$dShow3
                      GHC.Show.$fShowChar
                      GHC.Show.shows22)
                   eta
                   eta1) -}
8998c54d0d84b1f5a7b450ded968caac
  $s$fShow(,)_$s$fShow(,)_$cshowList6 ::
    [((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                                GHC.Types.Char),
                               GHC.Types.Char),
                              GHC.Types.Char),
                             GHC.Types.Char)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      Tests.Transcript.$s$fShow(,)_$dShow4
                      GHC.Show.$fShowChar
                      GHC.Show.shows22)
                   eta
                   eta1) -}
4e71fafd3d30aec17dd070943e246c67
  $s$fShow(,)_$s$fShow(,)_$cshowList7 ::
    [(((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(((((((GHC.Types.Char, GHC.Types.Char),
                                  GHC.Types.Char),
                                 GHC.Types.Char),
                                GHC.Types.Char),
                               GHC.Types.Char),
                              GHC.Types.Char),
                             GHC.Types.Char)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      Tests.Transcript.$s$fShow(,)_$dShow5
                      GHC.Show.$fShowChar
                      GHC.Show.shows22)
                   eta
                   eta1) -}
81836bad11e27e75901e6232f46f2409
  $tc'R :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14856453565567226672##
                   4968676591053028414##
                   Tests.Transcript.$trModule
                   Tests.Transcript.$tc'R1) -}
e7b50cf3c75de26c49d78b19d4748d55
  $tc'R1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'R"#) -}
95ba080a1a0251675210c56e2f3cd040
  $tcGradeRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8133060891506315837##
                   9363991037908148475##
                   Tests.Transcript.$trModule
                   Tests.Transcript.$tcGradeRecord1) -}
d750b5b06b8394d3e87c3ffaf80daa6a
  $tcGradeRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "GradeRecord"#) -}
1841b95b48cdc8db952e741c2eb5128a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Tests.Transcript.$trModule2
                   Tests.Transcript.$trModule1) -}
5eab47dbcc9d1ec104e2824bff745df4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Tests.Transcript"#) -}
a6d246bac7b4265ff222569d96b9941f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
06b6ae82e45d237af80bfb30d44605e6
  $w$c== ::
    GHC.Base.String
    -> GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 {
                        GHC.Base.Nothing
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing -> GHC.Base.eqString ww2 ww5
                             GHC.Base.Just ipv -> GHC.Types.False }
                        GHC.Base.Just a1
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing -> GHC.Types.False
                             GHC.Base.Just b1
                             -> case a1 of wild3 { GHC.Types.I# x ->
                                case b1 of wild4 { GHC.Types.I# y ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True -> GHC.Base.eqString ww2 ww5 } } } } } }) -}
ff86abeec4a4fd000bf4ab111a2c4fe9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <S,U><L,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww3 :: GHC.Base.String) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Int
                       GHC.Show.$fShowInt
                       Tests.Transcript.$fShowGradeRecord3
                       ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Base.++
                        @ GHC.Types.Char
                        Tests.Transcript.$fShowGradeRecord2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows6
                           (GHC.Show.showLitString
                              ww1
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.shows6
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.showSpace1
                                    (f (GHC.Types.:
                                          @ GHC.Types.Char
                                          GHC.Show.showSpace1
                                          (GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.shows6
                                             (GHC.Show.showLitString
                                                ww3
                                                (GHC.Types.:
                                                   @ GHC.Types.Char
                                                   GHC.Show.shows6
                                                   x)))))))))
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Tests.Transcript.$fShowGradeRecord2
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.shows6
                              (GHC.Show.showLitString
                                 ww1
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.shows6
                                    (GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showSpace1
                                       (f (GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.showSpace1
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.shows6
                                                (GHC.Show.showLitString
                                                   ww3
                                                   (GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.shows6
                                                      (GHC.Types.:
                                                         @ GHC.Types.Char
                                                         GHC.Show.shows4
                                                         x))))))))))) }) -}
196b31bc41602af6fab4bd4dffe43236
  $wreDecimalNumber ::
    [GHC.Types.Char]
    -> GHC.Types.Char -> [GHC.Types.Char] -> GHC.Types.Double
  {- Arity: 3, Strictness: <L,1*U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Types.Char)
                   (ww2 :: [GHC.Types.Char]) ->
                 case Text.Read.readEither6
                        @ GHC.Types.Double
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Double
                           Tests.Transcript.reDecimalNumber18
                           (GHC.Base.++
                              @ GHC.Types.Char
                              ww
                              (GHC.Types.: @ GHC.Types.Char ww1 ww2))) of wild {
                   [] -> Tests.Transcript.reDecimalNumber17
                   : x ds
                   -> case ds of wild1 {
                        [] -> x : ipv ipv1 -> Tests.Transcript.reDecimalNumber16 } }) -}
cc4d3291d75da8df00ef649a2e7f0778
  $wxs :: GHC.Prim.Int# -> [()]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
41a1b3577fdec78c2161f807834e7fc8
  data GradeRecord
    = R GHC.Base.String (GHC.Base.Maybe GHC.Types.Int) GHC.Base.String
1b889ba0e35ac63239113a16f51d5f35
  reCourseCodes :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Action
                   @ [GHC.Types.Char]
                   @ (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   (Tests.Transcript.reCourseCodes_fromRaw @ GHC.Types.Char)
                   Tests.Transcript.reCourseCodesRaw) -}
24e095d345eb87b70a149f80082ba158
  reCourseCodesRaw ::
    Hare.RE
      (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
           GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <(((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)>_N
                   Tests.Transcript.reCourseCodesRaw2
                   Tests.Transcript.reCourseCodesRaw_re) -}
11dff7b47e5682edaf14f04317d1c195
  reCourseCodesRaw1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Enum.eftChar 48# 57#) -}
c60c37d8ad5f8d0d3016b9060567457d
  reCourseCodesRaw2 ::
    Hare.RE
      ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ ((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)>_N
                   Tests.Transcript.reCourseCodesRaw3
                   Tests.Transcript.reCourseCodesRaw_re) -}
5c152ed38053b2fb401aaf419d3ab06a
  reCourseCodesRaw3 ::
    Hare.RE
      (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ (((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <(((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)>_N
                   Tests.Transcript.reCourseCodesRaw4
                   Tests.Transcript.reCourseCodesRaw_re) -}
d469e77ce6171191c9efc716ea599f51
  reCourseCodesRaw4 ::
    Hare.RE
      ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ ((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                      GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)>_N
                   Tests.Transcript.reCourseCodesRaw5
                   Tests.Transcript.reCourseCodesRaw_re) -}
13fd43a2b2592cd522b3079fe913c8f9
  reCourseCodesRaw5 ::
    Hare.RE
      (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
       GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ (((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                      GHC.Types.Char)
                   @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <(((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                        GHC.Types.Char)>_N
                   Tests.Transcript.reCourseCodesRaw7
                   Tests.Transcript.reCourseCodesRaw_caps) -}
ea60961e03f8c36d5cd20da32e96d6ba
  reCourseCodesRaw6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Enum.eftChar 65# 90#) -}
9a90493399feabba1190f99e64321b56
  reCourseCodesRaw7 ::
    Hare.RE ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ ((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char)>_N
                   Tests.Transcript.reCourseCodesRaw8
                   Tests.Transcript.reCourseCodesRaw_caps) -}
ae62d142e38905e167db58e7de89e22f
  reCourseCodesRaw8 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reCourseCodesRaw_caps
                   Tests.Transcript.reCourseCodesRaw_caps) -}
5ad7ddbd75a9b5a770cf9b2039088dbc
  reCourseCodesRaw_caps :: Hare.RE GHC.Types.Char
  {- Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reCourseCodesRaw6) -}
74fed81900bb6c24b9956c40c49e113f
  reCourseCodesRaw_re :: Hare.RE GHC.Types.Char
  {- Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reCourseCodesRaw1) -}
7e2a1d8ed4c08beeef254221280085e4
  reCourseCodes_fromRaw ::
    (((((((t, t), t), t), t), t), t), t) -> [t]
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S(S(S(SL)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(U,U),U),U),U),U),U),U)>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ t (w :: (((((((t, t), t), t), t), t), t), t)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { (,) ww4 ww5 ->
                 case ww4 of ww6 { (,) ww7 ww8 ->
                 case ww7 of ww9 { (,) ww10 ww11 ->
                 case ww10 of ww12 { (,) ww13 ww14 ->
                 case ww13 of ww15 { (,) ww16 ww17 ->
                 case ww16 of ww18 { (,) ww19 ww20 ->
                 GHC.Types.:
                   @ t
                   ww19
                   (GHC.Types.:
                      @ t
                      ww20
                      (GHC.Types.:
                         @ t
                         ww17
                         (GHC.Types.:
                            @ t
                            ww14
                            (GHC.Types.:
                               @ t
                               ww11
                               (GHC.Types.:
                                  @ t
                                  ww8
                                  (GHC.Types.:
                                     @ t
                                     ww5
                                     (GHC.Types.:
                                        @ t
                                        ww2
                                        (GHC.Types.[] @ t)))))))) } } } } } } }) -}
c507f43033456bec25db53cfdf7e8a15
  reDecimalNumber :: Hare.RE GHC.Types.Double
  {- Unfolding: (Hare.Action
                   @ GHC.Types.Double
                   @ ((GHC.Types.Char, GHC.Types.Double), GHC.Types.Char)
                   Tests.Transcript.reDecimalNumber19
                   Tests.Transcript.reDecimalNumber1) -}
15dadd8bc88271f71579ee6c6d9be5c8
  reDecimalNumber1 ::
    Hare.RE ((GHC.Types.Char, GHC.Types.Double), GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ ((GHC.Types.Char, GHC.Types.Double), GHC.Types.Char)
                   @ (GHC.Types.Char, GHC.Types.Double)
                   @ GHC.Types.Char
                   @~ <((GHC.Types.Char, GHC.Types.Double), GHC.Types.Char)>_N
                   Tests.Transcript.reDecimalNumber5
                   Tests.Transcript.reDecimalNumber2) -}
9c9d99415e487afd7dc57c0d97b5ab8a
  reDecimalNumber10 :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Star
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   @~ <[GHC.Types.Char]>_N
                   Tests.Transcript.reCourseCodesRaw_re) -}
dcbf24c62e4fe200c914c14e1d3666b9
  reDecimalNumber11 :: Hare.RE ([GHC.Types.Char], GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ ([GHC.Types.Char], GHC.Types.Char)
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   @~ <([GHC.Types.Char], GHC.Types.Char)>_N
                   Tests.Transcript.reDecimalNumber8
                   Tests.Transcript.reDecimalNumber12) -}
7c344d9a8f03a295fd7315fa4ae9e376
  reDecimalNumber12 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reDecimalNumber13) -}
9d371f34dc291e12943779a1af53cbdd
  reDecimalNumber13 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reDecimalNumber14
                   (GHC.Types.[] @ GHC.Types.Char)) -}
516f53ee879d3eaf66287f9562159013
  reDecimalNumber14 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '.'#) -}
cf2ecc549fb1fa0faf861075e71d36cc
  reDecimalNumber15 ::
    (([GHC.Types.Char], GHC.Types.Char), [GHC.Types.Char])
    -> GHC.Types.Double
  {- Arity: 1, Strictness: <S(SL),1*U(1*U(1*U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (([GHC.Types.Char], GHC.Types.Char), [GHC.Types.Char])) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { (,) ww4 ww5 ->
                 Tests.Transcript.$wreDecimalNumber ww4 ww5 ww2 } }) -}
ff4586c9d625d1299898407c845dd2d7
  reDecimalNumber16 :: GHC.Types.Double
  {- Strictness: x -}
c73a71d3240faf97fab4f7535b52a861
  reDecimalNumber17 :: GHC.Types.Double
  {- Strictness: x -}
1a19625a2d8e17218418895fa2b4a413
  reDecimalNumber18 ::
    Text.ParserCombinators.ReadP.P GHC.Types.Double
  {- Unfolding: (GHC.Read.$fReadDouble9
                   GHC.Read.$fReadDouble_$sconvertFrac
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Double
                   (Text.Read.readEither5 @ GHC.Types.Double)) -}
5406fe6a3b50c77f28519dc7e2844e26
  reDecimalNumber19 ::
    ((GHC.Types.Char, GHC.Types.Double), GHC.Types.Char)
    -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)L),1*U(1*U(A,1*U(U)),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: ((GHC.Types.Char, GHC.Types.Double), GHC.Types.Char)) ->
                 case ds of wild { (,) ds1 ds2 ->
                 case ds1 of wild1 { (,) ds3 r -> r } }) -}
2b2e88f364d8a29850d87c2c5fe31874
  reDecimalNumber2 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reDecimalNumber3) -}
a5f47b7e0fa451aa789039dc56ed679d
  reDecimalNumber3 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reDecimalNumber4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
207f488e2909bfa1bbb7add27799281e
  reDecimalNumber4 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ' '#) -}
5b3a9c567da019bd882eb2d8092d1025
  reDecimalNumber5 :: Hare.RE (GHC.Types.Char, GHC.Types.Double)
  {- Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Double)
                   @ GHC.Types.Char
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Char, GHC.Types.Double)>_N
                   Tests.Transcript.reDecimalNumber2
                   Tests.Transcript.reDecimalNumber6) -}
d4f3d07210a6f243a83fc7f85c3eac9e
  reDecimalNumber6 :: Hare.RE GHC.Types.Double
  {- Unfolding: (Hare.Action
                   @ GHC.Types.Double
                   @ (([GHC.Types.Char], GHC.Types.Char), [GHC.Types.Char])
                   Tests.Transcript.reDecimalNumber15
                   Tests.Transcript.reDecimalNumber7) -}
26d03062b0b400814ac2737b4a31acd5
  reDecimalNumber7 ::
    Hare.RE (([GHC.Types.Char], GHC.Types.Char), [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (([GHC.Types.Char], GHC.Types.Char), [GHC.Types.Char])
                   @ ([GHC.Types.Char], GHC.Types.Char)
                   @ [GHC.Types.Char]
                   @~ <(([GHC.Types.Char], GHC.Types.Char), [GHC.Types.Char])>_N
                   Tests.Transcript.reDecimalNumber11
                   Tests.Transcript.reDecimalNumber8) -}
7d4f309e5003eaff1f069b7e1ad907b7
  reDecimalNumber8 :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Action
                   @ [GHC.Types.Char]
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   (Hare.cons1 @ GHC.Types.Char)
                   Tests.Transcript.reDecimalNumber9) -}
38e3648e40ee5964c20ca368540e8910
  reDecimalNumber9 :: Hare.RE (GHC.Types.Char, [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   @ GHC.Types.Char
                   @ [GHC.Types.Char]
                   @~ <(GHC.Types.Char, [GHC.Types.Char])>_N
                   Tests.Transcript.reCourseCodesRaw_re
                   Tests.Transcript.reDecimalNumber10) -}
80cd93b77b0326ab3247831c43422358
  reGradeRecords :: Hare.RE Tests.Transcript.GradeRecord
  {- Unfolding: (Hare.Action
                   @ Tests.Transcript.GradeRecord
                   @ ((GHC.Base.String, GHC.Base.Maybe GHC.Types.Int),
                      GHC.Base.String)
                   Tests.Transcript.reGradeRecords22
                   Tests.Transcript.reGradeRecords1) -}
b261313554bbe918d1e9c644c2677434
  reGradeRecords1 ::
    Hare.RE
      (([GHC.Types.Char], GHC.Base.Maybe GHC.Types.Int),
       [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (([GHC.Types.Char], GHC.Base.Maybe GHC.Types.Int),
                      [GHC.Types.Char])
                   @ ([GHC.Types.Char], GHC.Base.Maybe GHC.Types.Int)
                   @ [GHC.Types.Char]
                   @~ <(([GHC.Types.Char], GHC.Base.Maybe GHC.Types.Int),
                        [GHC.Types.Char])>_N
                   Tests.Transcript.reGradeRecords2
                   Tests.Transcript.reGrades) -}
71a27120b05fc35c58fce851c151872d
  reGradeRecords10 :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither6
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Tests.Transcript.reGradeRecords13
                           s) of wild {
                   [] -> Tests.Transcript.reGradeRecords12
                   : x ds
                   -> case ds of wild1 {
                        [] -> x : ipv ipv1 -> Tests.Transcript.reGradeRecords11 } }) -}
f07a2edbb7f109981c6d69c358f98ddd
  reGradeRecords11 :: GHC.Types.Int
  {- Strictness: x -}
62289786c47c97f1a982f41f97b4797e
  reGradeRecords12 :: GHC.Types.Int
  {- Strictness: x -}
eae6be64c498960197811033c4c9f5f9
  reGradeRecords13 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt3
                   GHC.Read.$fReadInt_$sconvertInt
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
15c731b71c32b8fcc2585ad52861a286
  reGradeRecords14 ::
    Hare.RE
      (((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
       [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
                      [GHC.Types.Char])
                   @ ((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double)
                   @ [GHC.Types.Char]
                   @~ <(((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
                        [GHC.Types.Char])>_N
                   Tests.Transcript.reGradeRecords15
                   Tests.Transcript.reGradeRecords_spaces) -}
b47d99aeea66493823b7b6b3d44fefa7
  reGradeRecords15 ::
    Hare.RE ((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double)
  {- Unfolding: (Hare.Seq
                   @ ((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double)
                   @ (GHC.Types.Double, [GHC.Types.Char])
                   @ GHC.Types.Double
                   @~ <((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double)>_N
                   Tests.Transcript.reGradeRecords16
                   Tests.Transcript.reDecimalNumber) -}
5d8dc0d88edc1fad6aa4a4daa6c51a79
  reGradeRecords16 :: Hare.RE (GHC.Types.Double, [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (GHC.Types.Double, [GHC.Types.Char])
                   @ GHC.Types.Double
                   @ [GHC.Types.Char]
                   @~ <(GHC.Types.Double, [GHC.Types.Char])>_N
                   Tests.Transcript.reDecimalNumber
                   Tests.Transcript.reGradeRecords_spaces) -}
a6e2f5fc6cb7bdabcd557463bcb9d66d
  reGradeRecords17 :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Action
                   @ [GHC.Types.Char]
                   @ ([GHC.Types.Char], [GHC.Types.Char])
                   (Data.Tuple.fst @ [GHC.Types.Char] @ [GHC.Types.Char])
                   Tests.Transcript.reGradeRecords18) -}
56b1c5278cb33968a4d47482c2434723
  reGradeRecords18 :: Hare.RE ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ ([GHC.Types.Char], [GHC.Types.Char])
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   @~ <([GHC.Types.Char], [GHC.Types.Char])>_N
                   Tests.Transcript.reCourseCodes
                   Tests.Transcript.reGradeRecords19) -}
4d0e6a2c0823cef373f5130f9df307a9
  reGradeRecords19 :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Star
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   @~ <[GHC.Types.Char]>_N
                   Tests.Transcript.reGradeRecords20) -}
0a99a642c6404fe42542a24404213640
  reGradeRecords2 ::
    Hare.RE ([GHC.Types.Char], GHC.Base.Maybe GHC.Types.Int)
  {- Unfolding: (Hare.Seq
                   @ ([GHC.Types.Char], GHC.Base.Maybe GHC.Types.Int)
                   @ [GHC.Types.Char]
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   @~ <([GHC.Types.Char], GHC.Base.Maybe GHC.Types.Int)>_N
                   Tests.Transcript.reGradeRecords17
                   Tests.Transcript.reGradeRecords3) -}
e8a8b8a2a51ab27367c815db2635cea9
  reGradeRecords20 :: Hare.RE GHC.Types.Char
  {- Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradeRecords21) -}
a2d0ca43e910c2d9a16ec5da1fbbcd03
  reGradeRecords21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Enum.eftChar 32# 126#) -}
5a4dced9b91ce0e5cfb188ff5c96d0ff
  reGradeRecords22 ::
    ((GHC.Base.String, GHC.Base.Maybe GHC.Types.Int), GHC.Base.String)
    -> Tests.Transcript.GradeRecord
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U),U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: ((GHC.Base.String, GHC.Base.Maybe GHC.Types.Int),
                           GHC.Base.String)) ->
                 case ds of wild { (,) ds1 g ->
                 case ds1 of wild1 { (,) c m -> Tests.Transcript.R c m g } }) -}
76235f3bd117f8c14afee00e36d69ea0
  reGradeRecords3 :: Hare.RE (GHC.Base.Maybe GHC.Types.Int)
  {- Unfolding: (Hare.Action
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   @ ((((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
                       [GHC.Types.Char]),
                      GHC.Base.Maybe GHC.Types.Int)
                   (Data.Tuple.snd
                      @ (((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
                         [GHC.Types.Char])
                      @ (GHC.Base.Maybe GHC.Types.Int))
                   Tests.Transcript.reGradeRecords4) -}
d84646e0c95190e35556007dbe990678
  reGradeRecords4 ::
    Hare.RE
      ((((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
        [GHC.Types.Char]),
       GHC.Base.Maybe GHC.Types.Int)
  {- Unfolding: (Hare.Seq
                   @ ((((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
                       [GHC.Types.Char]),
                      GHC.Base.Maybe GHC.Types.Int)
                   @ (((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
                      [GHC.Types.Char])
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   @~ <((((GHC.Types.Double, [GHC.Types.Char]), GHC.Types.Double),
                         [GHC.Types.Char]),
                        GHC.Base.Maybe GHC.Types.Int)>_N
                   Tests.Transcript.reGradeRecords14
                   Tests.Transcript.reGradeRecords5) -}
fa0492a77b59424cc9a257eebca4f3f4
  reGradeRecords5 :: Hare.RE (GHC.Base.Maybe GHC.Types.Int)
  {- Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Tests.Transcript.reGradeRecords6
                   (Hare.option1 @ GHC.Types.Int)) -}
e73c112397de59d999ae739236788cd4
  reGradeRecords6 :: Hare.RE (GHC.Base.Maybe GHC.Types.Int)
  {- Unfolding: (Hare.Action
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   @ GHC.Types.Int
                   (GHC.Base.Just @ GHC.Types.Int)
                   Tests.Transcript.reGradeRecords7) -}
8ee12e323d0a2bfb0f373d3cc912680c
  reGradeRecords7 :: Hare.RE GHC.Types.Int
  {- Unfolding: (Hare.Action
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, [GHC.Types.Char])
                   (Data.Tuple.fst @ GHC.Types.Int @ [GHC.Types.Char])
                   Tests.Transcript.reGradeRecords8) -}
9a20e36d73ef595ba7c91f5b7fccb054
  reGradeRecords8 :: Hare.RE (GHC.Types.Int, [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (GHC.Types.Int, [GHC.Types.Char])
                   @ GHC.Types.Int
                   @ [GHC.Types.Char]
                   @~ <(GHC.Types.Int, [GHC.Types.Char])>_N
                   Tests.Transcript.reGradeRecords9
                   Tests.Transcript.reGradeRecords_spaces) -}
f27735f264e3f537b6a4bf91b98d2ba6
  reGradeRecords9 :: Hare.RE GHC.Types.Int
  {- Unfolding: (Hare.Action
                   @ GHC.Types.Int
                   @ GHC.Base.String
                   Tests.Transcript.reGradeRecords10
                   Tests.Transcript.reDecimalNumber8) -}
cd68dd1c9cfee5528c27b1616a4888b8
  reGradeRecords_spaces :: Hare.RE [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (Hare.Star
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   @~ <[GHC.Types.Char]>_N
                   Tests.Transcript.reDecimalNumber2) -}
2bc50bffa5e3aff072de0c04177ed4cf
  reGrades :: Hare.RE [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (Hare.Action
                   @ [GHC.Types.Char]
                   @ (GHC.Types.Char, GHC.Types.Char)
                   (Tests.Transcript.reGrades_fromRaw @ GHC.Types.Char)
                   Tests.Transcript.reGradesRaw) -}
34b80336eb68042512269407ed7b9c2f
  reGradesAlt :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.choose
                   @ GHC.Base.String
                   Tests.Transcript.reGradesAlt1) -}
9b4af3b7374d9b5e1cdee84b862ccf40
  reGradesAlt1 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt26
                   Tests.Transcript.reGradesAlt2) -}
ab3b63d1fb633262fc83315892d2d373
  reGradesAlt10 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt11) -}
949dc79d4aa3cdd2786a175c2f4b19a9
  reGradesAlt11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RC"#) -}
1ad629cb7d61538c68ea27262fb9d9bd
  reGradesAlt12 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt13) -}
5f8913f120b1a8a17a9b9524f86acbc2
  reGradesAlt13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EC"#) -}
6ffcb126e54fe1fc376627c62c21fa49
  reGradesAlt14 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt15) -}
928fba7ea87a2a9b9e7b456e606188ee
  reGradesAlt15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SY"#) -}
46009cdfd88aaee0ec6b377025018368
  reGradesAlt16 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt17) -}
fa2c449c77fe0ad268ff15a4cb23fb88
  reGradesAlt17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AF"#) -}
fe5eeb4616cbabfa624ac626d2df20f2
  reGradesAlt18 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt19) -}
2f28b101d27971687f199282247bc75c
  reGradesAlt19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FL"#) -}
48b4f694bae386310d88ffa9ed19232a
  reGradesAlt2 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt24
                   Tests.Transcript.reGradesAlt3) -}
d737c1140bc3600cf01c7c6433e13ab9
  reGradesAlt20 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt21) -}
d865ef11cc0c82d9be0f17a730ba2ae0
  reGradesAlt21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PS"#) -}
73dd63c65684e80702a75cf63efd5e08
  reGradesAlt22 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt23) -}
d2820e66cd5485f3442e688ae37b9366
  reGradesAlt23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CR"#) -}
329d619c6e8adc605cea44ed7175a598
  reGradesAlt24 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt25) -}
f26c39c7e31048c26d9e6a8d0e8650e2
  reGradesAlt25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DN"#) -}
6d52c86a920afb785523482e3cc50086
  reGradesAlt26 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string Tests.Transcript.reGradesAlt27) -}
54a15ecfc46380b4b956c8964d2dac6d
  reGradesAlt27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HD"#) -}
2b9258f35a777a47eea9905ad1248b53
  reGradesAlt3 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt22
                   Tests.Transcript.reGradesAlt4) -}
ae581134d2cba693553f7da561b996f7
  reGradesAlt4 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt20
                   Tests.Transcript.reGradesAlt5) -}
d89065181c14a6c5fe840ba65b558dfa
  reGradesAlt5 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt18
                   Tests.Transcript.reGradesAlt6) -}
7a2122f8d776bfc90a7b8d620941c7d5
  reGradesAlt6 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt16
                   Tests.Transcript.reGradesAlt7) -}
54e7d451ddb2a9c3437266bd7c7c0951
  reGradesAlt7 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt14
                   Tests.Transcript.reGradesAlt8) -}
66f00eb63be012a9b7ef41b4507dfdeb
  reGradesAlt8 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt12
                   Tests.Transcript.reGradesAlt9) -}
1d74430413e61c84126e80951723696d
  reGradesAlt9 :: [Hare.RE GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ (Hare.RE GHC.Base.String)
                   Tests.Transcript.reGradesAlt10
                   (GHC.Types.[] @ (Hare.RE GHC.Base.String))) -}
347c148c849ec3d02feb4b3afe5c09bb
  reGradesRaw :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw8
                   Tests.Transcript.reGradesRaw1) -}
678cace1ccef9c302ca98021208eccd1
  reGradesRaw1 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw5
                   Tests.Transcript.reGradesRaw2) -}
69fea1c42fa4e4ea1eb1135517747e9c
  reGradesRaw10 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw11) -}
8933946695bee76b636435b4ab49c1ec
  reGradesRaw11 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw12
                   (GHC.Types.[] @ GHC.Types.Char)) -}
54364d7c464950a8bb621b97e4a37eff
  reGradesRaw12 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'E'#) -}
a5942394dc08de2ab20ec9ec75effc91
  reGradesRaw13 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw21
                   Tests.Transcript.reGradesRaw14) -}
d89c3f495239673bf3916a34a157eb42
  reGradesRaw14 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw18
                   Tests.Transcript.reGradesRaw15) -}
3982d4afd0a46b45fea0a4cb2504e4cc
  reGradesRaw15 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw16) -}
b4f4d72b432f3de5d7367b3cb6e8b837
  reGradesRaw16 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw17
                   (GHC.Types.[] @ GHC.Types.Char)) -}
176c9f592f03e8766daa43f312430d58
  reGradesRaw17 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'Y'#) -}
c9867c0ccde2e6ece6220521079a4a93
  reGradesRaw18 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw19) -}
9723a48253f67c44cf414abbe1b3161c
  reGradesRaw19 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw20
                   (GHC.Types.[] @ GHC.Types.Char)) -}
eb4d8df5d86ba04995a96a02ce8f0077
  reGradesRaw2 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw3) -}
155ebc7d9cc150abeeebe52564123166
  reGradesRaw20 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'S'#) -}
e09c29e9d62441d98a5e71f871f20f51
  reGradesRaw21 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw29
                   Tests.Transcript.reGradesRaw22) -}
f58f94307089f19203c6bfc4ff6e9c07
  reGradesRaw22 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw26
                   Tests.Transcript.reGradesRaw23) -}
6362c1e1b2ce0b3f7519eedcda31a3a1
  reGradesRaw23 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw24) -}
d2a9fc61397e119a22c08fa78bef787d
  reGradesRaw24 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw25
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e8661a0a34c0c5e881ee60750bf5ea3b
  reGradesRaw25 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'F'#) -}
4211cbdda8887034011ead07f9efd48a
  reGradesRaw26 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw27) -}
4d6c7e1bebc903d0d10ae18ddef20ad8
  reGradesRaw27 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw28
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3ad051d39da48f9a6456709fb2219836
  reGradesRaw28 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'A'#) -}
dc88fe1644741504bffe2c8b559840ad
  reGradesRaw29 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw34
                   Tests.Transcript.reGradesRaw30) -}
54cf275b81bba2d132875e8be6cbaf29
  reGradesRaw3 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
37aa2e46156e413f180cf1ad84335279
  reGradesRaw30 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw23
                   Tests.Transcript.reGradesRaw31) -}
5b7f3d559f9141e37729694decd13a4c
  reGradesRaw31 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw32) -}
152a6c576b6d76f9b2caef341de7dd1c
  reGradesRaw32 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw33
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c584db2f91366c12f0cf1bff4dcc8061
  reGradesRaw33 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'L'#) -}
19eb9b73c7d6aaf04b66b8de1a782f7b
  reGradesRaw34 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw39
                   Tests.Transcript.reGradesRaw35) -}
9b04d9cb6eb715b7c6e9ba0fc7088a4f
  reGradesRaw35 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw36
                   Tests.Transcript.reGradesRaw18) -}
188d240b6e84fa2da9a603b00134d9dd
  reGradesRaw36 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw37) -}
58690b4ca7637a82c60819b3cd091575
  reGradesRaw37 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw38
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c56c0eeefde7f97aafa5ae06ff438fd8
  reGradesRaw38 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'P'#) -}
1290f69e0ed4213312bc59046780f74c
  reGradesRaw39 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw41
                   Tests.Transcript.reGradesRaw40) -}
6036e71a09ee3a7d869b3ae33fdf9acf
  reGradesRaw4 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'C'#) -}
d410b24d2ceb05e45c6bd0f4cf9be210
  reGradesRaw40 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw2
                   Tests.Transcript.reGradesRaw5) -}
c6d4e9be958af2bc7d94c182c7c7ab21
  reGradesRaw41 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw49
                   Tests.Transcript.reGradesRaw42) -}
a939bfba548da202433cf36d1db036ad
  reGradesRaw42 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw46
                   Tests.Transcript.reGradesRaw43) -}
8f002784c39ce9f5f01b1b07a440289f
  reGradesRaw43 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw44) -}
c9719500d674d083b1c3ed727d00afc7
  reGradesRaw44 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw45
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8cb2799bb2bf530238bcaed30f795427
  reGradesRaw45 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'N'#) -}
1c2cd8f2f0724770f47add25838f83a4
  reGradesRaw46 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw47) -}
e6fba7be43836ac722f560fd0ff2b046
  reGradesRaw47 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw48
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a2c2a71dd56f7adad51872e6c7226036
  reGradesRaw48 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'D'#) -}
246a5d651c8eb779a32a0c49f055ab4a
  reGradesRaw49 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw50
                   Tests.Transcript.reGradesRaw46) -}
3d025d6ee249610577a8171cdc937510
  reGradesRaw5 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw6) -}
d4f4e71285f16d0f5a8669f7a0b30407
  reGradesRaw50 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reGradesRaw51) -}
39bb2b3c2140aeb754b0d24cfbae68a5
  reGradesRaw51 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw52
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1608ab6481313cb421db166c8d01301e
  reGradesRaw52 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'H'#) -}
80c2b7be6f977bb22e3220dc4aa74208
  reGradesRaw6 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reGradesRaw7
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4a850178a7b883059df39d0161ad5590
  reGradesRaw7 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'R'#) -}
129b589f0c36b3fbb60f8c72356fd044
  reGradesRaw8 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Hare.Choose
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.reGradesRaw13
                   Tests.Transcript.reGradesRaw9) -}
8ba38964a821475d83c946d37b78679d
  reGradesRaw9 :: Hare.RE (GHC.Types.Char, GHC.Types.Char)
  {- HasNoCafRefs,
     Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, GHC.Types.Char)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char)>_N
                   Tests.Transcript.reGradesRaw10
                   Tests.Transcript.reGradesRaw2) -}
aa99bd8fd1915ee432cd2faf31bd99ed
  reGrades_fromRaw :: (t, t) -> [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t (ds :: (t, t)) ->
                 case ds of wild { (,) a b ->
                 GHC.Types.: @ t a (GHC.Types.: @ t b (GHC.Types.[] @ t)) }) -}
700667b606c8e4891601caf93e65aee9
  reStars :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Action
                   @ [GHC.Types.Char]
                   @ ([GHC.Types.Char], GHC.Types.Char)
                   (Data.Tuple.fst @ [GHC.Types.Char] @ GHC.Types.Char)
                   Tests.Transcript.reStars1) -}
2ef812964a7868376a27d398aeb579d4
  reStars1 :: Hare.RE ([GHC.Types.Char], GHC.Types.Char)
  {- Unfolding: (Hare.Seq
                   @ ([GHC.Types.Char], GHC.Types.Char)
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   @~ <([GHC.Types.Char], GHC.Types.Char)>_N
                   Tests.Transcript.reStars5
                   Tests.Transcript.reStars2) -}
755d6854fc8f6a061965a5036a482b72
  reStars10 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '*'#) -}
f02d96d85564c2e21a99dd763cdf76bc
  reStars2 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reStars3) -}
a39b6c29410956344397980f782bc6e4
  reStars3 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reStars4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0d3760cf90fac4ab9a9004c72caec58c
  reStars4 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '\n'#) -}
e7ee4be2c778a177e83ba4905c6de267
  reStars5 :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Action
                   @ [GHC.Types.Char]
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   (Data.Tuple.snd @ GHC.Types.Char @ [GHC.Types.Char])
                   Tests.Transcript.reStars6) -}
6fda14d5888796f544190474bbc099e0
  reStars6 :: Hare.RE (GHC.Types.Char, [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   @ GHC.Types.Char
                   @ [GHC.Types.Char]
                   @~ <(GHC.Types.Char, [GHC.Types.Char])>_N
                   Tests.Transcript.reDecimalNumber2
                   Tests.Transcript.reStars7) -}
a4fc9fbbda35010634b32171e6595cf5
  reStars7 :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.$wrptRange
                   @ GHC.Types.Char
                   1#
                   10#
                   Tests.Transcript.reStars8) -}
f61b43cf0dd35c4d80aadc26839d0402
  reStars8 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.reStars9) -}
3f6365e5b90587fbcf15ebaad63c00aa
  reStars9 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.reStars10
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7d5ad97956d89c0c95fdd955b16c5f42
  reStudentNumber :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.$wrpt
                   @ GHC.Types.Char
                   7#
                   Tests.Transcript.reCourseCodesRaw_re) -}
3759f6c771ce6aa4baaf0ae46d8013ec
  reTortoiseCourseCodes :: Hare.RE [GHC.Types.Char]
  {- Unfolding: (Hare.Action
                   @ [GHC.Types.Char]
                   @ ([GHC.Types.Char], GHC.Base.String)
                   (Data.Tuple.fst @ [GHC.Types.Char] @ GHC.Base.String)
                   Tests.Transcript.reTortoiseCourseCodes1) -}
4d36c628c0f078970d7c40e303e86996
  reTortoiseCourseCodes1 ::
    Hare.RE ([GHC.Types.Char], GHC.Base.String)
  {- Unfolding: (Hare.Seq
                   @ ([GHC.Types.Char], GHC.Base.String)
                   @ [GHC.Types.Char]
                   @ GHC.Base.String
                   @~ <([GHC.Types.Char], GHC.Base.String)>_N
                   Tests.Transcript.reCourseCodes
                   Tests.Transcript.reTortoiseCourseCodes2) -}
af561a3080e8853470aa80bf94b76390
  reTortoiseCourseCodes2 :: Hare.RE GHC.Base.String
  {- Unfolding: (Hare.string
                   Tests.Transcript.reTortoiseCourseCodes3) -}
00174c848340351b62e74015a9404244
  reTortoiseCourseCodes3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " Tortoise"#) -}
9e73a8813dc6575abbce65d8ab2f3ea8
  test_courseCodes :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_courseCodes3
                   Tests.Transcript.test_courseCodes2
                   Tests.Transcript.reCourseCodes
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.transcriptCodes) -}
7d5eb219e906b105c84857901f8e8065
  test_courseCodes1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Tests/transcript.txt"#) -}
3455d00df51db7d8c2cf5d69f85e1674
  test_courseCodes2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "course codes (Seq, Char, Action)"#) -}
2a17ee6be7c165d7e755a0011b1efb87
  test_courseCodes3 ::
    Test.Tasty.Core.TestName
    -> Hare.RE GHC.Base.String
    -> GHC.IO.FilePath
    -> [GHC.Base.String]
    -> Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Support.testRE
                   @ GHC.Base.String
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
3af482433ce029238210517f448388d5
  test_courseCodesRaw :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_courseCodesRaw5
                   Tests.Transcript.test_courseCodesRaw4
                   Tests.Transcript.reCourseCodesRaw
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.test_courseCodesRaw1) -}
1c3bb443bd50d5cce36e64dc57c1a7c3
  test_courseCodesRaw1 ::
    [(((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char),
       GHC.Types.Char),
      GHC.Types.Char)]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   Tests.Transcript.test_courseCodesRaw2
                   Tests.Transcript.transcriptCodes) -}
6493d3e9228ee6668f2c06e2ff79c0d7
  test_courseCodesRaw2 ::
    [GHC.Types.Char]
    -> (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
            GHC.Types.Char),
           GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char)
  {- Arity: 1,
     Unfolding: (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> Tests.Transcript.test_courseCodesRaw3 GHC.Prim.void#
                   : c ds1
                   -> case ds1 of wild1 {
                        [] -> Tests.Transcript.test_courseCodesRaw3 GHC.Prim.void#
                        : o ds2
                        -> case ds2 of wild2 {
                             [] -> Tests.Transcript.test_courseCodesRaw3 GHC.Prim.void#
                             : m ds3
                             -> case ds3 of wild3 {
                                  [] -> Tests.Transcript.test_courseCodesRaw3 GHC.Prim.void#
                                  : p ds4
                                  -> case ds4 of wild4 {
                                       [] -> Tests.Transcript.test_courseCodesRaw3 GHC.Prim.void#
                                       : a ds5
                                       -> case ds5 of wild5 {
                                            []
                                            -> Tests.Transcript.test_courseCodesRaw3 GHC.Prim.void#
                                            : b ds6
                                            -> case ds6 of wild6 {
                                                 []
                                                 -> Tests.Transcript.test_courseCodesRaw3
                                                      GHC.Prim.void#
                                                 : x ds7
                                                 -> case ds7 of wild7 {
                                                      []
                                                      -> Tests.Transcript.test_courseCodesRaw3
                                                           GHC.Prim.void#
                                                      : y ds8
                                                      -> case ds8 of wild8 {
                                                           []
                                                           -> (((((((c, o), m), p), a), b), x), y)
                                                           : ipv ipv1
                                                           -> Tests.Transcript.test_courseCodesRaw3
                                                                GHC.Prim.void# } } } } } } } } }) -}
927a53fd60e87c1f00f34b474c0da543
  test_courseCodesRaw3 ::
    GHC.Prim.Void#
    -> (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
            GHC.Types.Char),
           GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char),
        GHC.Types.Char)
  {- Arity: 1, Strictness: <B,A>x -}
57a6c43eedce477730732df761a01de5
  test_courseCodesRaw4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "raw course codes (Seq, Char)"#) -}
e777069a4943e602cdf8f6c7354cf246
  test_courseCodesRaw5 ::
    Test.Tasty.Core.TestName
    -> Hare.RE
         (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
              GHC.Types.Char),
             GHC.Types.Char),
            GHC.Types.Char),
           GHC.Types.Char),
          GHC.Types.Char)
    -> GHC.IO.FilePath
    -> [(((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
             GHC.Types.Char),
            GHC.Types.Char),
           GHC.Types.Char),
          GHC.Types.Char),
         GHC.Types.Char)]
    -> Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Support.testRE
                   @ (((((((GHC.Types.Char, GHC.Types.Char), GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char),
                       GHC.Types.Char),
                      GHC.Types.Char)
                   Tests.Transcript.$s$fEq(,)7
                   Tests.Transcript.$s$fShow(,)7) -}
afa259af69e340c47a7d6e6f08d74761
  test_decimalNumber :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_decimalNumber2
                   Tests.Transcript.test_decimalNumber1
                   Tests.Transcript.reDecimalNumber
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.transcriptDecimalNumbers) -}
c80b73125132b58376462f089a544677
  test_decimalNumber1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "decimal numbers (plus)"#) -}
c66b74556323de7fd581377e2562ba1c
  test_decimalNumber2 ::
    Test.Tasty.Core.TestName
    -> Hare.RE GHC.Types.Double
    -> GHC.IO.FilePath
    -> [GHC.Types.Double]
    -> Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Support.testRE
                   @ GHC.Types.Double
                   GHC.Classes.$fEqDouble
                   GHC.Float.$fShowDouble) -}
b868d70807d88c537a53f93714defdad
  test_empty :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_empty3
                   Tests.Transcript.test_empty2
                   Hare.$WEmpty
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.test_empty1) -}
d1d505f1cba8582b2e49b46f32a73c09
  test_empty1 :: [()]
  {- Unfolding: (Tests.Transcript.$wxs 5102#) -}
6ac4ffbb64d0fd540ea175a28c70a3d8
  test_empty2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Empty"#) -}
796230fe007e1c589690f7a3a74c8149
  test_empty3 ::
    Test.Tasty.Core.TestName
    -> Hare.RE ()
    -> GHC.IO.FilePath
    -> [()]
    -> Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Support.testRE
                   @ ()
                   GHC.Classes.$fEq()
                   GHC.Show.$fShow()) -}
ad83563e1ce9ca40d649e3edda784b36
  test_fail :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_empty3
                   Tests.Transcript.test_fail1
                   (Hare.Fail @ ())
                   Tests.Transcript.test_courseCodes1
                   (GHC.Types.[] @ ())) -}
35feb999df53d331ec994f6471522eb0
  test_fail1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fail"#) -}
e5ae1f196ccee430e406453cc35f6e63
  test_firstname :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_firstname11
                   Tests.Transcript.test_firstname10
                   Tests.Transcript.test_firstname7
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.test_firstname1) -}
9221cc1a36a443a41aff79b273612c82
  test_firstname1 :: [(GHC.Types.Char, [GHC.Types.Char])]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   Tests.Transcript.test_firstname5
                   Tests.Transcript.test_firstname2) -}
ab88cc545792f3a1b1d66f65b7de8501
  test_firstname10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "first name inits (Char, Seq, Star)"#) -}
0e7c59910e2d827b62261ee13d777814
  test_firstname11 ::
    Test.Tasty.Core.TestName
    -> Hare.RE (GHC.Types.Char, [GHC.Types.Char])
    -> GHC.IO.FilePath
    -> [(GHC.Types.Char, [GHC.Types.Char])]
    -> Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Support.testRE
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   Tests.Transcript.$s$fEq(,)
                   Tests.Transcript.$s$fShow(,)) -}
ba25c69b0d49acac26b3245c4c7b4b2d
  test_firstname2 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.List.reverse1
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_firstname3
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
51a82f4443371387b5d33462abcad444
  test_firstname3 :: [[GHC.Types.Char]]
  {- Unfolding: (Data.OldList.inits
                   @ GHC.Types.Char
                   Tests.Transcript.test_firstname4) -}
5459fa6c777730ede29775cd26b6bf94
  test_firstname4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " Simon The"#) -}
ac3b1f2c810b984b5499b502c36107fd
  test_firstname5 ::
    [GHC.Types.Char] -> (GHC.Types.Char, [GHC.Types.Char])
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (GHC.Tuple.(,)
                   @ GHC.Types.Char
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_firstname6) -}
9766490fe56fae78077f61132ebbd702
  test_firstname6 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# ','#) -}
7a6789dc8f04b0f5c2911776e8ab31fe
  test_firstname7 :: Hare.RE (GHC.Types.Char, [GHC.Types.Char])
  {- Unfolding: (Hare.Seq
                   @ (GHC.Types.Char, [GHC.Types.Char])
                   @ GHC.Types.Char
                   @ [GHC.Types.Char]
                   @~ <(GHC.Types.Char, [GHC.Types.Char])>_N
                   Tests.Transcript.test_firstname8
                   Tests.Transcript.reGradeRecords19) -}
ce4b93431996dafac7bf585ff9aa39b4
  test_firstname8 :: Hare.RE GHC.Types.Char
  {- HasNoCafRefs,
     Unfolding: (Hare.Char
                   @ GHC.Types.Char
                   @~ <GHC.Types.Char>_N
                   Tests.Transcript.test_firstname9) -}
6e39b68caae48fffabeece456e5a3eff
  test_firstname9 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.Transcript.test_firstname6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
527ec9411b7de8ec1de0e65655ea636c
  test_gradeRecords :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_gradeRecords2
                   Tests.Transcript.test_gradeRecords1
                   Tests.Transcript.reGradeRecords
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.transcriptGradeRecords) -}
cc740596d5e4292ff960390433ce1b9c
  test_gradeRecords1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "grade records (option, plus)"#) -}
ee28b22d96f17e510375b940925c02cd
  test_gradeRecords2 ::
    Test.Tasty.Core.TestName
    -> Hare.RE Tests.Transcript.GradeRecord
    -> GHC.IO.FilePath
    -> [Tests.Transcript.GradeRecord]
    -> Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Support.testRE
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.$fEqGradeRecord
                   Tests.Transcript.$fShowGradeRecord) -}
43bfa2f51b1c3a462a669511df42765e
  test_grades :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_courseCodes3
                   Tests.Transcript.test_grades1
                   Tests.Transcript.reGrades
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.transcriptGrades) -}
2819ac4a8ddca80c65df7fd31639dd25
  test_grades1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "raw grades (Seq, Char, Choose, Action)"#) -}
3a7ec7ee75226523d506fbcac315d290
  test_gradesAlt :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_courseCodes3
                   Tests.Transcript.test_gradesAlt1
                   Tests.Transcript.reGradesAlt
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.transcriptGrades) -}
9922dcbbf2f1b3b4a3f9289127c1b4ac
  test_gradesAlt1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "grades using combinators (string, choose)"#) -}
a31af10ff326f02afa49f7991d08286a
  test_gradesRaw :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_gradesRaw5
                   Tests.Transcript.test_gradesRaw4
                   Tests.Transcript.reGradesRaw
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.test_gradesRaw1) -}
9d4ce82dab0d34a6091d6a654d3dafc8
  test_gradesRaw1 :: [(GHC.Types.Char, GHC.Types.Char)]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.test_gradesRaw2
                   Tests.Transcript.transcriptGrades) -}
65751867ddaa2853c9f1cd005f2a0e07
  test_gradesRaw2 ::
    [GHC.Types.Char] -> (GHC.Types.Char, GHC.Types.Char)
  {- Arity: 1,
     Unfolding: (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> Tests.Transcript.test_gradesRaw3 GHC.Prim.void#
                   : a ds1
                   -> case ds1 of wild1 {
                        [] -> Tests.Transcript.test_gradesRaw3 GHC.Prim.void#
                        : b ds2
                        -> case ds2 of wild2 {
                             [] -> (a, b)
                             : ipv ipv1
                             -> Tests.Transcript.test_gradesRaw3 GHC.Prim.void# } } }) -}
e4a17a094229ca708539a15b9aec67b9
  test_gradesRaw3 ::
    GHC.Prim.Void# -> (GHC.Types.Char, GHC.Types.Char)
  {- Arity: 1, Strictness: <B,A>x -}
17abe3b3f0ee01ce8bee203eba69a9ba
  test_gradesRaw4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "raw grades (Seq, Char, Choose)"#) -}
60f4bed8577938eae6e992ea03e72b2d
  test_gradesRaw5 ::
    Test.Tasty.Core.TestName
    -> Hare.RE (GHC.Types.Char, GHC.Types.Char)
    -> GHC.IO.FilePath
    -> [(GHC.Types.Char, GHC.Types.Char)]
    -> Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Support.testRE
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Tests.Transcript.$s$fEq(,)1
                   Tests.Transcript.$s$fShow(,)1) -}
e42ea13554d1d2be8509d2634a52701a
  test_stars :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_courseCodes3
                   Tests.Transcript.test_stars16
                   Tests.Transcript.reStars
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.test_stars1) -}
a7ff2e305ad9d842ce222c9704659b12
  test_stars1 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars14
                   Tests.Transcript.test_stars2) -}
287d1f61dbe5c4f626268f5d074b1fbb
  test_stars10 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars13
                   Tests.Transcript.test_stars11) -}
edaa8190cd89e9f291f10b2bdee437c2
  test_stars11 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars12
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
950157f70fbf5a18abe96f7a475aea84
  test_stars12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "****"#) -}
d63bfd700bce37bfff44895f7dc98036
  test_stars13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*****"#) -}
61fda2c9cadc74188e954bdfe352e77d
  test_stars14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "********"#) -}
dacf50176ba745b5da87fec117aaa04b
  test_stars15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "******"#) -}
dfe6640e5b352e5a90849741c894e8aa
  test_stars16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stars (rptRange)"#) -}
8da102e7e66b7c76b1e928aa1813d9f3
  test_stars2 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars15
                   Tests.Transcript.test_stars3) -}
52a6038ce2cd2820bf1f8e2fc6b2d348
  test_stars3 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars14
                   Tests.Transcript.test_stars4) -}
2bbc4fd77f4c96d1c5e2970782b59c24
  test_stars4 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars12
                   Tests.Transcript.test_stars5) -}
33f7f3f691e4f13c633757d78794568d
  test_stars5 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars12
                   Tests.Transcript.test_stars6) -}
fc00c145a34ef48fbae1cc551cc2ab44
  test_stars6 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars13
                   Tests.Transcript.test_stars7) -}
f34a452cc20ff8313242f3e7ce725f03
  test_stars7 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars15
                   Tests.Transcript.test_stars8) -}
d3df8415a3de11ce204957b46b7c96a9
  test_stars8 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars14
                   Tests.Transcript.test_stars9) -}
1053d9dbf56a2bf1956db8e1cd2c9e9d
  test_stars9 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_stars13
                   Tests.Transcript.test_stars10) -}
7e71f7c36334035f56ac790bc8858da3
  test_studentNumber :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_courseCodes3
                   Tests.Transcript.test_studentNumber3
                   Tests.Transcript.reStudentNumber
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.test_studentNumber1) -}
d24efeb7e272e360720257661278e72f
  test_studentNumber1 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.test_studentNumber2
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
de0d30b4d6cac6d0b0df85399dd48807
  test_studentNumber2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "4444444"#) -}
2d801ae644cd5a1c6958e48b5b53e7eb
  test_studentNumber3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "student number (rpt)"#) -}
79701306e56aac7be889f601b76ae326
  test_tortoiseCourseCodes :: Test.Tasty.Core.TestTree
  {- Unfolding: (Tests.Transcript.test_courseCodes3
                   Tests.Transcript.test_tortoiseCourseCodes5
                   Tests.Transcript.reTortoiseCourseCodes
                   Tests.Transcript.test_courseCodes1
                   Tests.Transcript.test_tortoiseCourseCodes1) -}
f00bc094fdec025e2d0bd19ce7e2d2c2
  test_tortoiseCourseCodes1 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes74
                   Tests.Transcript.test_tortoiseCourseCodes2) -}
422746b9037479133cf2e465e2e908bb
  test_tortoiseCourseCodes2 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes71
                   Tests.Transcript.test_tortoiseCourseCodes3) -}
d168e4d6434d76478874edc6fb086e68
  test_tortoiseCourseCodes3 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes59
                   Tests.Transcript.test_tortoiseCourseCodes4) -}
3e69fa8effef0c774218acf9f6fcb101
  test_tortoiseCourseCodes4 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes53
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
affdc558feb8e77ab7761bffacd8dbea
  test_tortoiseCourseCodes5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "course codes for names starting with Tortoise (string)"#) -}
fa4acf1507d52bd80f1b59a775d4bbc1
  transcriptCodes :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes75
                   Tests.Transcript.transcriptCodes1) -}
f22d7fe8730abdd8eeba72b8317b32db
  transcriptCodes1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes74
                   Tests.Transcript.transcriptCodes2) -}
c58c2e80deba25f99e2dcc913e8c4342
  transcriptCodes10 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes65
                   Tests.Transcript.transcriptCodes11) -}
bdb954c892de80962c27bd14cab9355c
  transcriptCodes11 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes64
                   Tests.Transcript.transcriptCodes12) -}
3818f740eff21c277c6b2c6880df2627
  transcriptCodes12 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes63
                   Tests.Transcript.transcriptCodes13) -}
a57d487959801c661cc300cb5c6631e5
  transcriptCodes13 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes62
                   Tests.Transcript.transcriptCodes14) -}
ba202640d98501715c978d5ebc203cd9
  transcriptCodes14 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes61
                   Tests.Transcript.transcriptCodes15) -}
0a2edd8f2c60f2ade4cc34adfbcec3eb
  transcriptCodes15 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes60
                   Tests.Transcript.transcriptCodes16) -}
bd8e996d7829558b67a73266d955264c
  transcriptCodes16 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes59
                   Tests.Transcript.transcriptCodes17) -}
36fce7d36cfc5cce68e8d0fe94ee1460
  transcriptCodes17 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes58
                   Tests.Transcript.transcriptCodes18) -}
4e7c83e1486c68a48d5e093cd9215abf
  transcriptCodes18 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes57
                   Tests.Transcript.transcriptCodes19) -}
fb1ab62b36e5f0e845cf80fd6c3f3a27
  transcriptCodes19 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes56
                   Tests.Transcript.transcriptCodes20) -}
e4d18bf272805fb4c85c15027999c408
  transcriptCodes2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes73
                   Tests.Transcript.transcriptCodes3) -}
f464f8b53b8c9cd50829ffa8707d9510
  transcriptCodes20 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes55
                   Tests.Transcript.transcriptCodes21) -}
d81fd5428f500edd2a957d9b5d8f739d
  transcriptCodes21 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes54
                   Tests.Transcript.transcriptCodes22) -}
61a0e4d55875e92d8db3064c14168a3b
  transcriptCodes22 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes53
                   Tests.Transcript.transcriptCodes23) -}
8bbc4a542c6c32e16c76f934ae57e218
  transcriptCodes23 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes52
                   Tests.Transcript.transcriptCodes24) -}
a934d5153259853be1b03b6eb4609fed
  transcriptCodes24 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes51
                   Tests.Transcript.transcriptCodes25) -}
a55db8f2d5cef06223499874474810a2
  transcriptCodes25 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes50
                   Tests.Transcript.transcriptCodes26) -}
63266d709ab31be5a66fe03b2ba5df0f
  transcriptCodes26 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes49
                   Tests.Transcript.transcriptCodes27) -}
0faa7eb6dc9a12b437d46802100f37c3
  transcriptCodes27 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes48
                   Tests.Transcript.transcriptCodes28) -}
4cb5cdc17b9815fc1797b00ac74da5c6
  transcriptCodes28 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes47
                   Tests.Transcript.transcriptCodes29) -}
0c182157fc967645fa6f464efd0470f8
  transcriptCodes29 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes46
                   Tests.Transcript.transcriptCodes30) -}
35e0710210f2332334367a909d463dd4
  transcriptCodes3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes72
                   Tests.Transcript.transcriptCodes4) -}
88b72390452e10953f85a291ffc8362e
  transcriptCodes30 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes45
                   Tests.Transcript.transcriptCodes31) -}
54d78902c99a148bd15cd1666e349e0c
  transcriptCodes31 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes44
                   Tests.Transcript.transcriptCodes32) -}
14f6666b786812f45a3bfa899dbb0e10
  transcriptCodes32 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   Tests.Transcript.transcriptCodes33) -}
d486941b9ae9bee088c21843de2d21b8
  transcriptCodes33 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   Tests.Transcript.transcriptCodes34) -}
f340aa34af8b9a16218ce907d6354d5a
  transcriptCodes34 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes43
                   Tests.Transcript.transcriptCodes35) -}
4ee6dbc33ad170ffddc8eefaa6867ffb
  transcriptCodes35 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   Tests.Transcript.transcriptCodes36) -}
7a2555c6ce564570461e5d85a071a809
  transcriptCodes36 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes43
                   Tests.Transcript.transcriptCodes37) -}
a62e67ce0240cbc7712f28368cdc865f
  transcriptCodes37 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   Tests.Transcript.transcriptCodes38) -}
d825f55677eca606d00570b7cd1e49bb
  transcriptCodes38 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   Tests.Transcript.transcriptCodes39) -}
2adc04dc499904e9ea61180dcd2f8756
  transcriptCodes39 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   Tests.Transcript.transcriptCodes40) -}
2aee733539bc05f03267301c64494418
  transcriptCodes4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes71
                   Tests.Transcript.transcriptCodes5) -}
e3f0a89f79e79cc3f483daf5a5684a87
  transcriptCodes40 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   Tests.Transcript.transcriptCodes41) -}
0e20701ee33d8445937ae15fb6a0d9c6
  transcriptCodes41 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes42
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
b360e03f2afd4a5d078e2262f333f843
  transcriptCodes42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT9902"#) -}
d22335f2781037471db2eb71b63c1cd2
  transcriptCodes43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GSOE9400"#) -}
ef43c942dcfe3e6bb65ee1c18529bdb0
  transcriptCodes44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT9153"#) -}
92c59c71fd4b5e0d921190a717658919
  transcriptCodes45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT6752"#) -}
00b33634eab016d2de4bfe9407535901
  transcriptCodes46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3902"#) -}
b398a577397a7806e8f616e433e6c6b8
  transcriptCodes47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT4920"#) -}
12470aae95a827c544322e0b4e112821
  transcriptCodes48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT4911"#) -}
87fe3cd823fcdccb1cbe803a6c68d39d
  transcriptCodes49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT6721"#) -}
4c426bf49cadafbfcb0bcb475b43637d
  transcriptCodes5 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes70
                   Tests.Transcript.transcriptCodes6) -}
d472dc0a05d40fb0d20c2fa72ee5cd4e
  transcriptCodes50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT4910"#) -}
b09e7ef7f2942fe2f37ecea6d260a875
  transcriptCodes51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3891"#) -}
424f1dd984a4bc0b54a2b88a134905d0
  transcriptCodes52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MATH1081"#) -}
5fc016aa0c7f62329b4b6a512f3723cc
  transcriptCodes53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT4418"#) -}
8a9b751efd29a327613837b79afcae5f
  transcriptCodes54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT4161"#) -}
50401bef3d20045845e25ec37b978192
  transcriptCodes55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3171"#) -}
9a05772e6dd6f79ea32c2fd4c2987eaa
  transcriptCodes56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT4141"#) -}
987f7831e64654a747cb21af2b34b9cf
  transcriptCodes57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3411"#) -}
8302f46cbaae3758c21f0ce6f45892a9
  transcriptCodes58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3131"#) -}
10bb241a0754f18e77d4cd41a6e6b1c3
  transcriptCodes59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT4181"#) -}
17a28b01ace0a767c1426afd336f18c3
  transcriptCodes6 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes69
                   Tests.Transcript.transcriptCodes7) -}
b7bebe4f824550577b8b9487bf7d1ff8
  transcriptCodes60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3151"#) -}
a629520a901024e2647d7a78bbe7c930
  transcriptCodes61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3901"#) -}
7aef4643ecc49c9d491e740d2e41a933
  transcriptCodes62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "COMP3141"#) -}
089dad2d23850426155d74cacf79101d
  transcriptCodes63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT3161"#) -}
8c05477b814c9c322c09d145003f82b7
  transcriptCodes64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TURT2631"#) -}
8b7cfdccf754cfb9814c94d13a758659
  transcriptCodes65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT2911"#) -}
5bd3e39b714761bd6c8c6cd0073ddda3
  transcriptCodes66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT2121"#) -}
44f1eff42aaf2f07107b9ddfb813b948
  transcriptCodes67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT2041"#) -}
d374bd68c5218fffbb36a03f1a65d26a
  transcriptCodes68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TURT2630"#) -}
4c124ef6b98449ee87b2e45c5818aa48
  transcriptCodes69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MATH1231"#) -}
7155b0b5e81fc37c80d26b08eeca3e3b
  transcriptCodes7 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes68
                   Tests.Transcript.transcriptCodes8) -}
1ca30bc8dff15ec372005959d5ff972e
  transcriptCodes70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TURT1001"#) -}
4475302baa8c51331f3a4f8e85c99a5e
  transcriptCodes71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT1927"#) -}
b89a66ba8ff2e79e82c37f4f4230c97f
  transcriptCodes72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MATH1131"#) -}
177db6be5265a247068d4a77696daa21
  transcriptCodes73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TURT1000"#) -}
7bd107e18c0a98b83467ee971f4fc09a
  transcriptCodes74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SHEL1603"#) -}
bbbac8538b34d82b892ab6839a707e03
  transcriptCodes75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TORT1917"#) -}
d0f764a7938fb284de81798007c130fd
  transcriptCodes8 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes67
                   Tests.Transcript.transcriptCodes9) -}
3ad6688b4b8f0224de177fb30680732b
  transcriptCodes9 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.transcriptCodes66
                   Tests.Transcript.transcriptCodes10) -}
76a9c5ecb203a1234819f1b1f302f88e
  transcriptDecimalNumbers :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers1) -}
a4667a3d6f1874b844152fb9ac4055f1
  transcriptDecimalNumbers1 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers2) -}
ce809bc71143056ec08be81f545d26e5
  transcriptDecimalNumbers10 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers11) -}
7b588a4624cdbff23db4a1fb68637ff4
  transcriptDecimalNumbers100 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers101) -}
668897d120305a2bcb53121f3aa8a35b
  transcriptDecimalNumbers101 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers102) -}
4da177cb1525a78c7667142f30f4a59d
  transcriptDecimalNumbers102 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers103) -}
a91b9d63c97b72f55b0396f8378c155a
  transcriptDecimalNumbers103 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers104) -}
3db526f2ad66178d4a8a3ccd9d53b28b
  transcriptDecimalNumbers104 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers105) -}
74d961a2ec1234d42394a213cd727b51
  transcriptDecimalNumbers105 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers106) -}
b15c614ca20ba5918687e7bb0529eab5
  transcriptDecimalNumbers106 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers107) -}
1a2fe628c135700ae8e6efa4c21660c3
  transcriptDecimalNumbers107 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers108) -}
8580e3145ad72fa2147628cd2785ab34
  transcriptDecimalNumbers108 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers109) -}
f27be5e1495cf75d4622cb1a283e30f0
  transcriptDecimalNumbers109 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers110) -}
e6c58b7652d79f664540bdb6ad562bdf
  transcriptDecimalNumbers11 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers12) -}
2edb6531d01ee1c949c65deca4e3cf44
  transcriptDecimalNumbers110 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers111) -}
9b599713532f70dc4dce5f0be01b3847
  transcriptDecimalNumbers111 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers112) -}
88fc6044de5d819f66ce376c06f938b3
  transcriptDecimalNumbers112 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers113) -}
3bcbf11a684546aa36ecd06801eb86a5
  transcriptDecimalNumbers113 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers114) -}
c7f6dedb048b6c92a7a3f039b6a29826
  transcriptDecimalNumbers114 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers115) -}
cf19d17a5c3725ff8d74f8f497e035c6
  transcriptDecimalNumbers115 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers116) -}
be88a55e66e31c004c31b190956532c9
  transcriptDecimalNumbers116 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers117) -}
4e0e7aff211cf37649adcb0421a71840
  transcriptDecimalNumbers117 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers118
                   (GHC.Types.[] @ GHC.Types.Double)) -}
b4c105cc4bbdb50657b0fc1747097fa2
  transcriptDecimalNumbers118 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 192.0##) -}
a246ce4e13d3b93fa304363f83675713
  transcriptDecimalNumbers119 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
ff78f1e2a146164906a136c80be90002
  transcriptDecimalNumbers12 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers13) -}
a675eba1d3b0601ec8fd467988458ccf
  transcriptDecimalNumbers120 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 24.0##) -}
be77454ff4966b3f94acc400e68582c6
  transcriptDecimalNumbers121 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 82.691##) -}
bf293c9b15c81ee636585bfc6bc8d160
  transcriptDecimalNumbers122 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 12.0##) -}
e6994900a114dcef541165a7351bbbd5
  transcriptDecimalNumbers123 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 93.0##) -}
13ab8c4f9cbbe5178b71d7fe3479e10b
  transcriptDecimalNumbers124 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 21.0##) -}
53a526046c0ad1a0e12b2993de651518
  transcriptDecimalNumbers125 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 90.0##) -}
85e097de366a49ab9dc42b58c1ddd2ad
  transcriptDecimalNumbers126 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 6.0##) -}
8a969de67160e991a181308b94462d26
  transcriptDecimalNumbers127 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 15.0##) -}
6c0fb3fc4256e01e20224b344f5955cd
  transcriptDecimalNumbers128 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 86.5##) -}
fd4f6fcca507e60081f68a8eda50845f
  transcriptDecimalNumbers129 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 3.0##) -}
d879a7caaff8b787181f77b7efcb6582
  transcriptDecimalNumbers13 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers14) -}
71f1abf2f5a18a07cb72d83dffc91385
  transcriptDecimalNumbers130 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 82.75##) -}
7a3db8c79888fd48f5da72004d9c6511
  transcriptDecimalNumbers131 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 18.0##) -}
253db967c976e6caed69548fdd7c4c34
  transcriptDecimalNumbers132 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 78.333##) -}
13cc40deada3859dad547fcef130a9c0
  transcriptDecimalNumbers133 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 90.5##) -}
4d9049abaf56c80638b1e6a6d8c98a26
  transcriptDecimalNumbers134 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 95.5##) -}
7e7d747ab5ec460655162331e8462755
  transcriptDecimalNumbers135 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 72.5##) -}
b4bf4308c53457e5061e692177e3b460
  transcriptDecimalNumbers136 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 76.0##) -}
897219ad7aeee33943284ea2b0806bce
  transcriptDecimalNumbers137 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 42.0##) -}
054942ce4afb355ee1131906d8486402
  transcriptDecimalNumbers138 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 71.0##) -}
da8af3f8cc2ca767f5fdd1ca0a0a778a
  transcriptDecimalNumbers139 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 76.75##) -}
acc351d9a8468e7557947eaf53225ed4
  transcriptDecimalNumbers14 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers15) -}
397dfa0a1cb751c9f67c67e65551e930
  transcriptDecimalNumbers15 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers16) -}
444b161656fc7d656fc4cd9a582ea2a5
  transcriptDecimalNumbers16 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers138
                   Tests.Transcript.transcriptDecimalNumbers17) -}
b36b6ad3ba9c73f944aba9041977a2da
  transcriptDecimalNumbers17 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers137
                   Tests.Transcript.transcriptDecimalNumbers18) -}
c807df94a9511460c96a48f4e976d189
  transcriptDecimalNumbers18 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers19) -}
4c5fca5a35b0d461bb0c26d0ec04d329
  transcriptDecimalNumbers19 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers20) -}
9fe75a0bffa3c9aeb255324b3b1efbc9
  transcriptDecimalNumbers2 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers3) -}
cd018fead4c3e7b0cd7e3421fac03cd3
  transcriptDecimalNumbers20 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers21) -}
7c9bad1854b61943f14de3908d280838
  transcriptDecimalNumbers21 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers22) -}
66e64ca5d1e0ec48f8161d718000ad72
  transcriptDecimalNumbers22 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers23) -}
0d1c9a0fe1115aff94e252d7dfcc7572
  transcriptDecimalNumbers23 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers24) -}
4ac99132517963802119d1fdb67721d4
  transcriptDecimalNumbers24 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers25) -}
c2ce5a5eb23dcb68bd4f62786779c861
  transcriptDecimalNumbers25 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers26) -}
0ea8823a85c4dabac101eeac56c1e8a3
  transcriptDecimalNumbers26 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers136
                   Tests.Transcript.transcriptDecimalNumbers27) -}
d588af83fd85f508c5e01ce968cf6564
  transcriptDecimalNumbers27 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers28) -}
73e00afdc764c991ddf521df63deb654
  transcriptDecimalNumbers28 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers29) -}
6380c271972241f420e6c101f9325300
  transcriptDecimalNumbers29 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers30) -}
22a57f2fca283ec50d5f24de2cf464bc
  transcriptDecimalNumbers3 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers4) -}
cb077f7dc6f05f6b600f3199e9600cfb
  transcriptDecimalNumbers30 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers31) -}
d356cf9413a88445c19078e50aba5ff1
  transcriptDecimalNumbers31 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers32) -}
bf48aad14b0fa587332670687ebe4333
  transcriptDecimalNumbers32 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers135
                   Tests.Transcript.transcriptDecimalNumbers33) -}
d59e5648b49fc654a9291bf6278310c0
  transcriptDecimalNumbers33 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers122
                   Tests.Transcript.transcriptDecimalNumbers34) -}
021d2296a010eb739a05d16d6b6ce297
  transcriptDecimalNumbers34 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers35) -}
7661dc4f2d4364950577b0237140f63e
  transcriptDecimalNumbers35 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers36) -}
7eb2f57172cf59c8bd2a473a3abb94f7
  transcriptDecimalNumbers36 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers37) -}
db90c7d2ca8ed47b40c614d18416f2a1
  transcriptDecimalNumbers37 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers38) -}
4b0e09e2197e2becd36f37ca88b8da2d
  transcriptDecimalNumbers38 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers134
                   Tests.Transcript.transcriptDecimalNumbers39) -}
7acb4cbe254701b787e1dea387074c1d
  transcriptDecimalNumbers39 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers122
                   Tests.Transcript.transcriptDecimalNumbers40) -}
c8dcebd68e8b09698609800c1b3575f7
  transcriptDecimalNumbers4 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers5) -}
a9bc8466b97aa50d9cb1ff6143ffcfab
  transcriptDecimalNumbers40 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers41) -}
5f9704c134304d5a950143b95d75f75e
  transcriptDecimalNumbers41 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers42) -}
becc39c98d6a2e0f50ea42a2a25738b9
  transcriptDecimalNumbers42 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers43) -}
87dfc0b3e5ddb545010a95d916f3ecfc
  transcriptDecimalNumbers43 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers44) -}
1e1d545c8d9fe6e10c935f7d9fdc3e0b
  transcriptDecimalNumbers44 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers133
                   Tests.Transcript.transcriptDecimalNumbers45) -}
2b7ae4fb79f5c5245d76af826075222f
  transcriptDecimalNumbers45 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers122
                   Tests.Transcript.transcriptDecimalNumbers46) -}
61f2cbee5814fd2682866d1364e43ab2
  transcriptDecimalNumbers46 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers47) -}
d605f0a1dec40ea177f356965bbb4271
  transcriptDecimalNumbers47 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers48) -}
747ff8afad589ad982ba5ea8418380d5
  transcriptDecimalNumbers48 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers49) -}
488adf71f25d171e73facd9e2efcb1be
  transcriptDecimalNumbers49 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers50) -}
981bd64a6f69c7c9433ddcc28a286ff2
  transcriptDecimalNumbers5 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers6) -}
675fd61e39e5164142fd4d7eae1ef0e9
  transcriptDecimalNumbers50 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers51) -}
851c510d85ff01ccfe7e11383e95a2bc
  transcriptDecimalNumbers51 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers52) -}
3a324dcb44c46fe0ea404b0ff5a3f024
  transcriptDecimalNumbers52 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers132
                   Tests.Transcript.transcriptDecimalNumbers53) -}
69c659541c3e5cb30a3aa5dd469acc5d
  transcriptDecimalNumbers53 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers131
                   Tests.Transcript.transcriptDecimalNumbers54) -}
009212b4922a0f4b143693f580260dfd
  transcriptDecimalNumbers54 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers55) -}
a0a8a163847c38267d9906bb9b9c5ff7
  transcriptDecimalNumbers55 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers56) -}
1a5f617e8d20ec7f599698593685357f
  transcriptDecimalNumbers56 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers57) -}
a262a8200e2c8e471f651d494a35ebc5
  transcriptDecimalNumbers57 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers58) -}
9e91b21a9986a3a13756fe570737da9c
  transcriptDecimalNumbers58 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers59) -}
b0a56d8421b633d95dbe5b14a72c8de1
  transcriptDecimalNumbers59 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers60) -}
c6539b5fb8180e25b246138f5c6494d8
  transcriptDecimalNumbers6 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers7) -}
e1c0c01c745c43199982fa5a40572b53
  transcriptDecimalNumbers60 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers61) -}
d9c61736ba28f4181bcbed63621fd4b6
  transcriptDecimalNumbers61 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers62) -}
781c1aa9519d4e11068a667e74baec20
  transcriptDecimalNumbers62 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers130
                   Tests.Transcript.transcriptDecimalNumbers63) -}
8d387809b5b74d95ba36a7b229461e44
  transcriptDecimalNumbers63 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers64) -}
6243fc73e900f2c7d55cb24cafba985a
  transcriptDecimalNumbers64 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers65) -}
ae3d16fbd4a74284a7b36ac4278c1cc3
  transcriptDecimalNumbers65 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers66) -}
08c6067ba036e0f6cd0556fa43e30935
  transcriptDecimalNumbers66 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers129
                   Tests.Transcript.transcriptDecimalNumbers67) -}
dbe3aa6c8496fd2f66aa2f38125ed0e3
  transcriptDecimalNumbers67 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers129
                   Tests.Transcript.transcriptDecimalNumbers68) -}
644797ec0b7a197d6fab4c0030a92efe
  transcriptDecimalNumbers68 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers69) -}
7bdb3cdcdd6de6dc414b3b9662243157
  transcriptDecimalNumbers69 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers70) -}
c680c31b7c445f44c76db2376ac0f224
  transcriptDecimalNumbers7 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers8) -}
15899f13bb8885364a4da5fccc2da9e4
  transcriptDecimalNumbers70 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers128
                   Tests.Transcript.transcriptDecimalNumbers71) -}
5a040af4745f4293f40c9f0120cae5e6
  transcriptDecimalNumbers71 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers127
                   Tests.Transcript.transcriptDecimalNumbers72) -}
671991f7901bd6433e5f823a8ffa3e8f
  transcriptDecimalNumbers72 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers127
                   Tests.Transcript.transcriptDecimalNumbers73) -}
3dd3933c39bc712a1fcc263a96a21586
  transcriptDecimalNumbers73 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers127
                   Tests.Transcript.transcriptDecimalNumbers74) -}
75254aa3f482ac52c7c76d01132c1682
  transcriptDecimalNumbers74 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers75) -}
8604029a8502eb3628598e7f1b961e0f
  transcriptDecimalNumbers75 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers126
                   Tests.Transcript.transcriptDecimalNumbers76) -}
cddbb6cc63a1fa58b65db0b49eb7038e
  transcriptDecimalNumbers76 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers125
                   Tests.Transcript.transcriptDecimalNumbers77) -}
de460dba7188c175862b5e61a1e78e7d
  transcriptDecimalNumbers77 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers124
                   Tests.Transcript.transcriptDecimalNumbers78) -}
18f23a4ab9cc4f3c788ef5f008ac0b1d
  transcriptDecimalNumbers78 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers122
                   Tests.Transcript.transcriptDecimalNumbers79) -}
5686a2ff64b36e4c08dd51950f7965dd
  transcriptDecimalNumbers79 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers122
                   Tests.Transcript.transcriptDecimalNumbers80) -}
01d1982f83628f5093703e23dc370eb9
  transcriptDecimalNumbers8 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers139
                   Tests.Transcript.transcriptDecimalNumbers9) -}
3389df2b59d30566b81dc2c540658bca
  transcriptDecimalNumbers80 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers123
                   Tests.Transcript.transcriptDecimalNumbers81) -}
159ecf1aad3d6e494c618e604279affc
  transcriptDecimalNumbers81 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers122
                   Tests.Transcript.transcriptDecimalNumbers82) -}
5f22b98c2a5986d6e918302daf8a22ff
  transcriptDecimalNumbers82 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers121
                   Tests.Transcript.transcriptDecimalNumbers83) -}
a48c04fb461c73f48508c68e91290d69
  transcriptDecimalNumbers83 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers118
                   Tests.Transcript.transcriptDecimalNumbers84) -}
ef4c9afcc1b93d2e5f7b65d9d57b4e86
  transcriptDecimalNumbers84 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers85) -}
1d13d8c6f906a4d566763e6bb652b696
  transcriptDecimalNumbers85 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers86) -}
f7fe31216d75a3e2df5237c71d50ce9e
  transcriptDecimalNumbers86 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers87) -}
ad56cda301e790b180764c6f50d61f10
  transcriptDecimalNumbers87 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers88) -}
9d865ef39e076789cdefb64558d59646
  transcriptDecimalNumbers88 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers89) -}
07c15cd380faf995a265bad2ab995fa6
  transcriptDecimalNumbers89 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers90) -}
8b0ecce3069abc84d273212675144010
  transcriptDecimalNumbers9 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers10) -}
00c5926b3754f6e3ed55bd2f8129a14e
  transcriptDecimalNumbers90 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers91) -}
9c2b8851119f5f8c498707294e6c8030
  transcriptDecimalNumbers91 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers92) -}
ce6ead9cd1cbeb417900270170154264
  transcriptDecimalNumbers92 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers93) -}
d4d4590b4bd21e7ac78b874e6ec96915
  transcriptDecimalNumbers93 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers94) -}
9565a8e337ff3614a9326419f983fbfe
  transcriptDecimalNumbers94 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers95) -}
fd4fac3fd698a52d5ffcd5d41c9b85bc
  transcriptDecimalNumbers95 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers96) -}
7fe4e0b724c241bcf5c8a5f56c7d42b8
  transcriptDecimalNumbers96 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers120
                   Tests.Transcript.transcriptDecimalNumbers97) -}
e71ca89fbc4ddec6fdd7ecd5780e4af6
  transcriptDecimalNumbers97 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers98) -}
bb04840e67dfcb1f72bd19f750d50521
  transcriptDecimalNumbers98 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers99) -}
59fa4b7c50044b1943c521798b8ea94b
  transcriptDecimalNumbers99 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Tests.Transcript.transcriptDecimalNumbers119
                   Tests.Transcript.transcriptDecimalNumbers100) -}
9091fb345058228f9ce265b5372e3c71
  transcriptGradeRecords :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords120
                   Tests.Transcript.transcriptGradeRecords1) -}
23d6dcf5dcd462ad4b28860f423739da
  transcriptGradeRecords1 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords117
                   Tests.Transcript.transcriptGradeRecords2) -}
9a22640fe5a71ae1867d14e600f7a49d
  transcriptGradeRecords10 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords94
                   Tests.Transcript.transcriptGradeRecords11) -}
de4cc4b8db73d12edd741c820dccaa1b
  transcriptGradeRecords100 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 90#) -}
0a67299f12ccf52f9e763317cc53ec3d
  transcriptGradeRecords101 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes68
                   Tests.Transcript.transcriptGradeRecords102
                   Tests.Transcript.reGradesAlt21) -}
f0b29262ca340a86b3f815a38aa16fcf
  transcriptGradeRecords102 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords103) -}
9a33b82b67a9fd2d02eddeef231161ed
  transcriptGradeRecords103 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 56#) -}
f17f2d2be949b2c61f00d26b812c70e8
  transcriptGradeRecords104 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes69
                   Tests.Transcript.transcriptGradeRecords105
                   Tests.Transcript.reGradesAlt21) -}
6ddf749eea69f8411bc867e14171853e
  transcriptGradeRecords105 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords106) -}
6167f9b11f8c7357b889b4af5ba2e52c
  transcriptGradeRecords106 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 57#) -}
7ff88233a3f605e1127503ea7d6cb365
  transcriptGradeRecords107 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes70
                   Tests.Transcript.transcriptGradeRecords108
                   Tests.Transcript.reGradesAlt21) -}
83308a0886a89000b851b9dfacbb11a3
  transcriptGradeRecords108 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords109) -}
f65103b291af22c30d1660f5a0931352
  transcriptGradeRecords109 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 58#) -}
dc92f575e5285532744bcebebc68f261
  transcriptGradeRecords11 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords91
                   Tests.Transcript.transcriptGradeRecords12) -}
48a549c10e8e124ff7861f4e1a032ad9
  transcriptGradeRecords110 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes71
                   Tests.Transcript.transcriptGradeRecords85
                   Tests.Transcript.reGradesAlt27) -}
1515037790b018e637ad3dda4df7f505
  transcriptGradeRecords111 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes72
                   Tests.Transcript.transcriptGradeRecords112
                   Tests.Transcript.reGradesAlt21) -}
65edba71bddd110d4dc966663ac8785e
  transcriptGradeRecords112 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords113) -}
378b2f30641c60e59abbeb40fe6145fd
  transcriptGradeRecords113 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 59#) -}
78df072bcffe4e46745de488133e7887
  transcriptGradeRecords114 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes73
                   Tests.Transcript.transcriptGradeRecords115
                   Tests.Transcript.reGradesAlt25) -}
b3954a849ea6f77777bd102ea4b4a3f9
  transcriptGradeRecords115 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords116) -}
f08453e6adeddb054097e3343fc8168d
  transcriptGradeRecords116 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 80#) -}
d8ae7edaf869c351ac3d48459338463a
  transcriptGradeRecords117 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes74
                   Tests.Transcript.transcriptGradeRecords118
                   Tests.Transcript.reGradesAlt23) -}
bf77ba8c0e96d11cedfdd36160cfb940
  transcriptGradeRecords118 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords119) -}
098ab241c80bf0fabb309391e52c67e8
  transcriptGradeRecords119 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 74#) -}
ca1cfc2bec96a996a20a678d19b94a86
  transcriptGradeRecords12 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords88
                   Tests.Transcript.transcriptGradeRecords13) -}
875433c5d2c1943aa937e1d8c74e1d7d
  transcriptGradeRecords120 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes75
                   Tests.Transcript.transcriptGradeRecords81
                   Tests.Transcript.reGradesAlt27) -}
c3a5f55868a260843fbcc450f3c30027
  transcriptGradeRecords13 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords87
                   Tests.Transcript.transcriptGradeRecords14) -}
28336ba67fb4f5244bb1d7790806e37d
  transcriptGradeRecords14 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords84
                   Tests.Transcript.transcriptGradeRecords15) -}
2194fe02dd4400d812439155a493e1df
  transcriptGradeRecords15 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords83
                   Tests.Transcript.transcriptGradeRecords16) -}
9aa4bc87d4d4ab3e209351a2c31a38e1
  transcriptGradeRecords16 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords80
                   Tests.Transcript.transcriptGradeRecords17) -}
5afaa5051e7ddca6f5d42dc49b1d3e3c
  transcriptGradeRecords17 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords79
                   Tests.Transcript.transcriptGradeRecords18) -}
3b050ea7c95196acc5a7a60e2df27ea5
  transcriptGradeRecords18 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords78
                   Tests.Transcript.transcriptGradeRecords19) -}
094a981d50a97ed5ff50e28c56ba16f8
  transcriptGradeRecords19 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords75
                   Tests.Transcript.transcriptGradeRecords20) -}
1ebc613eda0a011b15ba5829d2f05c3d
  transcriptGradeRecords2 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords114
                   Tests.Transcript.transcriptGradeRecords3) -}
a1b507c8982522175198874ecae10612
  transcriptGradeRecords20 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords72
                   Tests.Transcript.transcriptGradeRecords21) -}
5b161ae499547d93808416ea058a34dd
  transcriptGradeRecords21 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords69
                   Tests.Transcript.transcriptGradeRecords22) -}
d3578c7a30039919843adb4568a85da4
  transcriptGradeRecords22 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords68
                   Tests.Transcript.transcriptGradeRecords23) -}
bbdb9d844c6faf114c3322057d35b3ea
  transcriptGradeRecords23 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords65
                   Tests.Transcript.transcriptGradeRecords24) -}
e93ec33593105be68a22ad85232fe5ef
  transcriptGradeRecords24 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords64
                   Tests.Transcript.transcriptGradeRecords25) -}
e9ec9eba8be27b9de6d1d4b7ca664637
  transcriptGradeRecords25 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords63
                   Tests.Transcript.transcriptGradeRecords26) -}
04014d61cdaea713a844f3b5d37b40e8
  transcriptGradeRecords26 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords60
                   Tests.Transcript.transcriptGradeRecords27) -}
3668cb53d7f1e1671f990d1fca02f8e6
  transcriptGradeRecords27 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords57
                   Tests.Transcript.transcriptGradeRecords28) -}
6a35b16707b6e7ebb709df94eabf37dc
  transcriptGradeRecords28 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords54
                   Tests.Transcript.transcriptGradeRecords29) -}
6c7b85e8dbfbf04c7ed9f43873d0c48c
  transcriptGradeRecords29 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords51
                   Tests.Transcript.transcriptGradeRecords30) -}
020f493ae9a60331dd930894a5fc7b3b
  transcriptGradeRecords3 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords111
                   Tests.Transcript.transcriptGradeRecords4) -}
45373de62e15f80a185fcca4ae48331f
  transcriptGradeRecords30 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords48
                   Tests.Transcript.transcriptGradeRecords31) -}
083fece6a7646d2b1017931c5559959a
  transcriptGradeRecords31 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords45
                   Tests.Transcript.transcriptGradeRecords32) -}
3b48ade83cee8da155badbe6afc8ca94
  transcriptGradeRecords32 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   Tests.Transcript.transcriptGradeRecords33) -}
34da522efafccbb506601caff98af45d
  transcriptGradeRecords33 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   Tests.Transcript.transcriptGradeRecords34) -}
43c169fcbf72781e729e24eb8daf234e
  transcriptGradeRecords34 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords44
                   Tests.Transcript.transcriptGradeRecords35) -}
9b4ae685eb33bb9b8c5a479506894453
  transcriptGradeRecords35 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   Tests.Transcript.transcriptGradeRecords36) -}
edda3afdb63cdcaeaffee5b81c098960
  transcriptGradeRecords36 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords43
                   Tests.Transcript.transcriptGradeRecords37) -}
8b814ce10918ee065924ad7bd9e7ce9b
  transcriptGradeRecords37 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   Tests.Transcript.transcriptGradeRecords38) -}
8c5f001b4b316bd1e13bb0c23a79cb7d
  transcriptGradeRecords38 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   Tests.Transcript.transcriptGradeRecords39) -}
c5f190de607c8367dc42c99d080a9d6b
  transcriptGradeRecords39 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   Tests.Transcript.transcriptGradeRecords40) -}
2c09e3991e6764ffa410eb1d33682345
  transcriptGradeRecords4 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords110
                   Tests.Transcript.transcriptGradeRecords5) -}
44ef567972dd16620fd01c16f781ba56
  transcriptGradeRecords40 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   Tests.Transcript.transcriptGradeRecords41) -}
1823399359b98f7e222f0a8a416cbcd9
  transcriptGradeRecords41 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords42
                   (GHC.Types.[] @ Tests.Transcript.GradeRecord)) -}
c7396c7a3d881ced3a88004b2c271af2
  transcriptGradeRecords42 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes42
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Tests.Transcript.reGradesAlt11) -}
e3d76ea6ac17234986a206e6bab4298e
  transcriptGradeRecords43 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes43
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Tests.Transcript.reGradesAlt15) -}
77e5e9e0e4e9bbcbf152a849a2eafd97
  transcriptGradeRecords44 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes43
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Tests.Transcript.reGradesAlt13) -}
64f2764ab5baf4d1147cb8d12ce43424
  transcriptGradeRecords45 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes44
                   Tests.Transcript.transcriptGradeRecords46
                   Tests.Transcript.reGradesAlt27) -}
ab5e4bcec1e207bceefd017bf081f9d9
  transcriptGradeRecords46 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords47) -}
e965a0460d964a5c7e0e78df20f73246
  transcriptGradeRecords47 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 86#) -}
284a5d64bca20b3df9ae00a401ab1792
  transcriptGradeRecords48 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes45
                   Tests.Transcript.transcriptGradeRecords49
                   Tests.Transcript.reGradesAlt27) -}
1d6dd2050c91e4f448dcaeb59ef8dfd0
  transcriptGradeRecords49 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords50) -}
0db877ccaca73968fd8f89a250fd9137
  transcriptGradeRecords5 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords107
                   Tests.Transcript.transcriptGradeRecords6) -}
10393460b042cee74395efaede0e58d2
  transcriptGradeRecords50 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 89#) -}
911a876263ccdbcc395bcce9b1551159
  transcriptGradeRecords51 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes46
                   Tests.Transcript.transcriptGradeRecords52
                   Tests.Transcript.reGradesAlt27) -}
bf67d9aaceb78f56515c624f7d665f37
  transcriptGradeRecords52 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords53) -}
ba7ac087b83ad3ae4e657b49755a89a9
  transcriptGradeRecords53 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 93#) -}
62545b8b3c44d88071f3a24aa1ef4cc1
  transcriptGradeRecords54 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes47
                   Tests.Transcript.transcriptGradeRecords55
                   Tests.Transcript.reGradesAlt25) -}
ee75c07ee6c9a18e01a40f9f5a042355
  transcriptGradeRecords55 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords56) -}
dea7e577756292d07e8a5268dd840d4d
  transcriptGradeRecords56 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 75#) -}
da8dfb3cccd5b2391fd240c648b0f617
  transcriptGradeRecords57 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes48
                   Tests.Transcript.transcriptGradeRecords58
                   Tests.Transcript.reGradesAlt27) -}
8fc1fd68a3813eaa40f0be9d450e4976
  transcriptGradeRecords58 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords59) -}
153bec94756acad7535d725fe843577c
  transcriptGradeRecords59 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 96#) -}
795401dfa6183b2ac1cceb3575de16b2
  transcriptGradeRecords6 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords104
                   Tests.Transcript.transcriptGradeRecords7) -}
5656b0dfa3b96864ad0d75ac67db3e7a
  transcriptGradeRecords60 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes49
                   Tests.Transcript.transcriptGradeRecords61
                   Tests.Transcript.reGradesAlt27) -}
690b9a7a3916aafecd87275e5ba51758
  transcriptGradeRecords61 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords62) -}
c8a5bf6e54f9730880d3ebad2e13b869
  transcriptGradeRecords62 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 87#) -}
90de886bb55ed35f339212eb73526b09
  transcriptGradeRecords63 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes50
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Tests.Transcript.reGradesAlt15) -}
28bf57eece166d3e73ad07038973c0c6
  transcriptGradeRecords64 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes51
                   Tests.Transcript.transcriptGradeRecords46
                   Tests.Transcript.reGradesAlt27) -}
7c97c82722d06cca1c6afdc1651cde9b
  transcriptGradeRecords65 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes52
                   Tests.Transcript.transcriptGradeRecords66
                   Tests.Transcript.reGradesAlt21) -}
7382c68eeb98cfd65af7fdf101163c27
  transcriptGradeRecords66 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords67) -}
ef30d60268526001988d0b81e7fc7874
  transcriptGradeRecords67 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 60#) -}
bdc8232050830329d0898a6b872ba355
  transcriptGradeRecords68 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes53
                   Tests.Transcript.transcriptGradeRecords46
                   Tests.Transcript.reGradesAlt27) -}
cdab447d110c92f5d4d9a0395499b03a
  transcriptGradeRecords69 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes54
                   Tests.Transcript.transcriptGradeRecords70
                   Tests.Transcript.reGradesAlt27) -}
db41e27334e445e4ec3db7c2582eda05
  transcriptGradeRecords7 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords101
                   Tests.Transcript.transcriptGradeRecords8) -}
4d46ca0d67c4b8a8c1cb1dc3353bd00e
  transcriptGradeRecords70 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords71) -}
3c3e7947685f6882a2a5a74e894a03b3
  transcriptGradeRecords71 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100#) -}
0834d1406aabb1a263ee281abc5ed7ae
  transcriptGradeRecords72 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes55
                   Tests.Transcript.transcriptGradeRecords73
                   Tests.Transcript.reGradesAlt27) -}
a5f11f2a08d2dcdb90e06acc19174359
  transcriptGradeRecords73 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords74) -}
f0c0b83b36ad70b59a736b8f65d03cab
  transcriptGradeRecords74 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 85#) -}
7ed48f5b72e2f5e840900e6466a1e59c
  transcriptGradeRecords75 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes56
                   Tests.Transcript.transcriptGradeRecords76
                   Tests.Transcript.reGradesAlt23) -}
29dd691d09aa618458e989cdae5c4fa7
  transcriptGradeRecords76 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords77) -}
4411be459d01f6c2e9231c8595356136
  transcriptGradeRecords77 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 71#) -}
f81220a3881c3e933320d85a63f61ef1
  transcriptGradeRecords78 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes57
                   Tests.Transcript.transcriptGradeRecords55
                   Tests.Transcript.reGradesAlt25) -}
2be3b93cb00767ba5de8bf2a27cec876
  transcriptGradeRecords79 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes58
                   Tests.Transcript.transcriptGradeRecords49
                   Tests.Transcript.reGradesAlt27) -}
92098bc57a1171d39fc86c2f28d46fa4
  transcriptGradeRecords8 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords98
                   Tests.Transcript.transcriptGradeRecords9) -}
425637d51f3eec62e03f89b5c14813f2
  transcriptGradeRecords80 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes59
                   Tests.Transcript.transcriptGradeRecords81
                   Tests.Transcript.reGradesAlt27) -}
ee7dbb9ec60e7951a62d9bd2140afa28
  transcriptGradeRecords81 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords82) -}
7b5a0e86d2503d3097d4e6412af5862c
  transcriptGradeRecords82 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 94#) -}
56ccda6e5aa227d78d582e98a008c6e7
  transcriptGradeRecords83 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes60
                   Tests.Transcript.transcriptGradeRecords61
                   Tests.Transcript.reGradesAlt27) -}
d7125df76f1a1f1ca8c19ab77f6ac3f9
  transcriptGradeRecords84 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes61
                   Tests.Transcript.transcriptGradeRecords85
                   Tests.Transcript.reGradesAlt27) -}
0bfc378344b3a3e27a55388ab19c436a
  transcriptGradeRecords85 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords86) -}
4830d1213686c05f6eaefeaedc1f1991
  transcriptGradeRecords86 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 98#) -}
d6f746314ff4e6088b38db667b5f2491
  transcriptGradeRecords87 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes62
                   Tests.Transcript.transcriptGradeRecords52
                   Tests.Transcript.reGradesAlt27) -}
2bf14d793f2449d6b278033099c1f4d4
  transcriptGradeRecords88 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes63
                   Tests.Transcript.transcriptGradeRecords89
                   Tests.Transcript.reGradesAlt27) -}
9ebaf91c483d97404580cadaba6b5ee7
  transcriptGradeRecords89 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords90) -}
6c145e8cf68d79b0df93b9e324062995
  transcriptGradeRecords9 :: [Tests.Transcript.GradeRecord]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Tests.Transcript.GradeRecord
                   Tests.Transcript.transcriptGradeRecords95
                   Tests.Transcript.transcriptGradeRecords10) -}
86fdf5d6ccd77241ed2ec18b21995b49
  transcriptGradeRecords90 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 91#) -}
a22b284ed2133051b61c5d5f012c7622
  transcriptGradeRecords91 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes64
                   Tests.Transcript.transcriptGradeRecords92
                   Tests.Transcript.reGradesAlt21) -}
a4dbacf250f2f1a0b26b57209983fb1c
  transcriptGradeRecords92 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords93) -}
51497561d1fc93bcac23390fca1b789a
  transcriptGradeRecords93 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 54#) -}
035babef83fada86f827dc22de95b247
  transcriptGradeRecords94 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes65
                   Tests.Transcript.transcriptGradeRecords49
                   Tests.Transcript.reGradesAlt27) -}
3879924b05c21318e7fb2b2357ca868a
  transcriptGradeRecords95 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes66
                   Tests.Transcript.transcriptGradeRecords96
                   Tests.Transcript.reGradesAlt23) -}
1888e5c82a971c7cbc1d915ee99dfc43
  transcriptGradeRecords96 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords97) -}
845b1c5852c319b964ed085f943360ac
  transcriptGradeRecords97 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 69#) -}
49b885d65fa14738d6ac539769766347
  transcriptGradeRecords98 :: Tests.Transcript.GradeRecord
  {- Strictness: m,
     Unfolding: (Tests.Transcript.R
                   Tests.Transcript.transcriptCodes67
                   Tests.Transcript.transcriptGradeRecords99
                   Tests.Transcript.reGradesAlt27) -}
3f4d1f7d435843c180e4ccd836805896
  transcriptGradeRecords99 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Types.Int
                   Tests.Transcript.transcriptGradeRecords100) -}
f5d34806d16ad88b08d4f6f2eb6077f0
  transcriptGrades :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades1) -}
15432021e23a90d54e1f000d32a4a282
  transcriptGrades1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt23
                   Tests.Transcript.transcriptGrades2) -}
a88229cd62e0548b8e55fde63cb77b36
  transcriptGrades10 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades11) -}
16e3720ba47d019bda3674001536015d
  transcriptGrades11 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt21
                   Tests.Transcript.transcriptGrades12) -}
92c94406a0548a4957f8e243e032179d
  transcriptGrades12 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades13) -}
ef4d021a7c6606f3cc86cbccf4dc700f
  transcriptGrades13 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades14) -}
b31f7f84e6d5a64772c9523d06ce670d
  transcriptGrades14 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades15) -}
b0935e69acf9ed9dfdf5576337b9a2f6
  transcriptGrades15 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades16) -}
2325eebd7140cda0e0a9207df17c5114
  transcriptGrades16 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades17) -}
5914f3323a5f272545faea518c5f90b9
  transcriptGrades17 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades18) -}
f9eb284ad674521b4473583bff17f437
  transcriptGrades18 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt25
                   Tests.Transcript.transcriptGrades19) -}
734a8d6d1a5cac56306d472f0674f7ff
  transcriptGrades19 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt23
                   Tests.Transcript.transcriptGrades20) -}
18192e352f1fd510c85adf9f0d964e26
  transcriptGrades2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt25
                   Tests.Transcript.transcriptGrades3) -}
9240c268ac7b779477da41b0be6c6ac6
  transcriptGrades20 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades21) -}
fceb0f57c1e3c8418c1c278827829ebe
  transcriptGrades21 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades22) -}
2743d3a8fdf1c7c2b5f7e550b8a83b79
  transcriptGrades22 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades23) -}
d5d8871320f2e54dfc838f4d929e8ec5
  transcriptGrades23 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt21
                   Tests.Transcript.transcriptGrades24) -}
a3026bbaa4b7267aff3552a32465246a
  transcriptGrades24 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades25) -}
7cd7211d9944ccf725e5f11def0cf19e
  transcriptGrades25 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt15
                   Tests.Transcript.transcriptGrades26) -}
72bcc88a14ff94de9f6c16afe7559860
  transcriptGrades26 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades27) -}
5b59a9d4e4a144c7f221322f24d4fb10
  transcriptGrades27 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades28) -}
2023880fd0646ec9be12c34cf970c804
  transcriptGrades28 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt25
                   Tests.Transcript.transcriptGrades29) -}
ea783741a870551a656a69faf9bee888
  transcriptGrades29 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades30) -}
4d3a46e0fa478ea69a59c90696c533e8
  transcriptGrades3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt21
                   Tests.Transcript.transcriptGrades4) -}
1531fa9e9170257622ddaa127452039a
  transcriptGrades30 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades31) -}
dbb041b5592da4226ff7c3382085f82e
  transcriptGrades31 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades32) -}
4d545debc24cf1640bbdc749e5de13d9
  transcriptGrades32 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   Tests.Transcript.transcriptGrades33) -}
86a69a9d690f00615df15b7efa6b1df8
  transcriptGrades33 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   Tests.Transcript.transcriptGrades34) -}
31c67e91ea0f4f7800ab5e1064b5cbec
  transcriptGrades34 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt13
                   Tests.Transcript.transcriptGrades35) -}
2f5e82ce75d6615322275ee5dcb400cd
  transcriptGrades35 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   Tests.Transcript.transcriptGrades36) -}
c495ec1a0a87889a3b77da4957d4f02c
  transcriptGrades36 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt15
                   Tests.Transcript.transcriptGrades37) -}
a653c35cce605862de71d296f2919798
  transcriptGrades37 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   Tests.Transcript.transcriptGrades38) -}
21f9982fba5ee9862bccf5d3a7b0c3d7
  transcriptGrades38 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   Tests.Transcript.transcriptGrades39) -}
6b10b5e8fdb43999b5e8b9f670dbbd8f
  transcriptGrades39 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   Tests.Transcript.transcriptGrades40) -}
3ec0695f21d7ab020b83f036ef8e74c1
  transcriptGrades4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades5) -}
4d2793094c44359f623b441ff12db1a3
  transcriptGrades40 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   Tests.Transcript.transcriptGrades41) -}
e1c7032f13277161ccb6bc06e95c5f2d
  transcriptGrades41 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt11
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
f623131e42285e446efb5b514b3ad6cf
  transcriptGrades5 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt21
                   Tests.Transcript.transcriptGrades6) -}
6e2c2179120bbd12205fc17918fae81a
  transcriptGrades6 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt21
                   Tests.Transcript.transcriptGrades7) -}
a44f0545f5001fe4339177a4dd88a5b2
  transcriptGrades7 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt21
                   Tests.Transcript.transcriptGrades8) -}
4174f620514078298a61168c2d42ad97
  transcriptGrades8 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt27
                   Tests.Transcript.transcriptGrades9) -}
a918fe59780a777ff6f2017b99b7eb26
  transcriptGrades9 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Tests.Transcript.reGradesAlt23
                   Tests.Transcript.transcriptGrades10) -}
instance GHC.Classes.Eq [Tests.Transcript.GradeRecord]
  = Tests.Transcript.$fEqGradeRecord
instance GHC.Show.Show [Tests.Transcript.GradeRecord]
  = Tests.Transcript.$fShowGradeRecord
"SPEC/Tests.Transcript $fEq(,) @ ((((((Char, Char), Char), Char),
                                   Char),
                                  Char),
                                 Char) @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                                                                                                                                GHC.Types.Char)
                                                                                                                                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                                                                                                                                               ((((((GHC.Types.Char,
                                                                                                                                                                                                                                     GHC.Types.Char),
                                                                                                                                                                                                                                    GHC.Types.Char),
                                                                                                                                                                                                                                   GHC.Types.Char),
                                                                                                                                                                                                                                  GHC.Types.Char),
                                                                                                                                                                                                                                 GHC.Types.Char),
                                                                                                                                                                                                                                GHC.Types.Char))
  GHC.Classes.$fEq(,) @ ((((((GHC.Types.Char, GHC.Types.Char),
                             GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      $dEq
                      $dEq1
  = Tests.Transcript.$s$fEq(,)7
"SPEC/Tests.Transcript $fEq(,) @ (((((Char, Char), Char), Char),
                                  Char),
                                 Char) @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                                                                                     GHC.Types.Char)
                                                                                                                                                                         ($dEq :: GHC.Classes.Eq
                                                                                                                                                                                    (((((GHC.Types.Char,
                                                                                                                                                                                         GHC.Types.Char),
                                                                                                                                                                                        GHC.Types.Char),
                                                                                                                                                                                       GHC.Types.Char),
                                                                                                                                                                                      GHC.Types.Char),
                                                                                                                                                                                     GHC.Types.Char))
  GHC.Classes.$fEq(,) @ (((((GHC.Types.Char, GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      $dEq
                      $dEq1
  = Tests.Transcript.$s$fEq(,)6
"SPEC/Tests.Transcript $fEq(,) @ ((((Char, Char), Char), Char),
                                 Char) @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                                           GHC.Types.Char)
                                                                                                                               ($dEq :: GHC.Classes.Eq
                                                                                                                                          ((((GHC.Types.Char,
                                                                                                                                              GHC.Types.Char),
                                                                                                                                             GHC.Types.Char),
                                                                                                                                            GHC.Types.Char),
                                                                                                                                           GHC.Types.Char))
  GHC.Classes.$fEq(,) @ ((((GHC.Types.Char, GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      $dEq
                      $dEq1
  = Tests.Transcript.$s$fEq(,)5
"SPEC/Tests.Transcript $fEq(,) @ (((Char, Char), Char), Char) @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                  GHC.Types.Char)
                                                                                      ($dEq :: GHC.Classes.Eq
                                                                                                 (((GHC.Types.Char,
                                                                                                    GHC.Types.Char),
                                                                                                   GHC.Types.Char),
                                                                                                  GHC.Types.Char))
  GHC.Classes.$fEq(,) @ (((GHC.Types.Char, GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      $dEq
                      $dEq1
  = Tests.Transcript.$s$fEq(,)4
"SPEC/Tests.Transcript $fEq(,) @ ((Char, Char), Char) @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                                          GHC.Types.Char)
                                                                              ($dEq :: GHC.Classes.Eq
                                                                                         ((GHC.Types.Char,
                                                                                           GHC.Types.Char),
                                                                                          GHC.Types.Char))
  GHC.Classes.$fEq(,) @ ((GHC.Types.Char, GHC.Types.Char),
                         GHC.Types.Char)
                      @ GHC.Types.Char
                      $dEq
                      $dEq1
  = Tests.Transcript.$s$fEq(,)3
"SPEC/Tests.Transcript $fEq(,) @ (Char, Char) @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                                  GHC.Types.Char)
                                                                      ($dEq :: GHC.Classes.Eq
                                                                                 (GHC.Types.Char,
                                                                                  GHC.Types.Char))
  GHC.Classes.$fEq(,) @ (GHC.Types.Char, GHC.Types.Char)
                      @ GHC.Types.Char
                      $dEq
                      $dEq1
  = Tests.Transcript.$s$fEq(,)2
"SPEC/Tests.Transcript $fEq(,) @ Char @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                          GHC.Types.Char)
                                                              ($dEq :: GHC.Classes.Eq
                                                                         GHC.Types.Char)
  GHC.Classes.$fEq(,) @ GHC.Types.Char @ GHC.Types.Char $dEq $dEq1
  = Tests.Transcript.$s$fEq(,)1
"SPEC/Tests.Transcript $fEq(,) @ Char @ [Char]" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                            [GHC.Types.Char])
                                                                ($dEq :: GHC.Classes.Eq
                                                                           GHC.Types.Char)
  GHC.Classes.$fEq(,) @ GHC.Types.Char @ [GHC.Types.Char] $dEq $dEq1
  = Tests.Transcript.$s$fEq(,)
"SPEC/Tests.Transcript $fShow(,) @ ((((((Char, Char), Char), Char),
                                     Char),
                                    Char),
                                   Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                                                          GHC.Types.Char)
                                                                                                                                                                                                                            ($dShow :: GHC.Show.Show
                                                                                                                                                                                                                                         ((((((GHC.Types.Char,
                                                                                                                                                                                                                                               GHC.Types.Char),
                                                                                                                                                                                                                                              GHC.Types.Char),
                                                                                                                                                                                                                                             GHC.Types.Char),
                                                                                                                                                                                                                                            GHC.Types.Char),
                                                                                                                                                                                                                                           GHC.Types.Char),
                                                                                                                                                                                                                                          GHC.Types.Char))
  GHC.Show.$fShow(,) @ ((((((GHC.Types.Char, GHC.Types.Char),
                            GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     $dShow
                     $dShow1
  = Tests.Transcript.$s$fShow(,)7
"SPEC/Tests.Transcript $fShow(,) @ (((((Char, Char), Char), Char),
                                    Char),
                                   Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                             GHC.Types.Char)
                                                                                                                                                                               ($dShow :: GHC.Show.Show
                                                                                                                                                                                            (((((GHC.Types.Char,
                                                                                                                                                                                                 GHC.Types.Char),
                                                                                                                                                                                                GHC.Types.Char),
                                                                                                                                                                                               GHC.Types.Char),
                                                                                                                                                                                              GHC.Types.Char),
                                                                                                                                                                                             GHC.Types.Char))
  GHC.Show.$fShow(,) @ (((((GHC.Types.Char, GHC.Types.Char),
                           GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     $dShow
                     $dShow1
  = Tests.Transcript.$s$fShow(,)6
"SPEC/Tests.Transcript $fShow(,) @ ((((Char, Char), Char), Char),
                                   Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                 GHC.Types.Char)
                                                                                                                                   ($dShow :: GHC.Show.Show
                                                                                                                                                ((((GHC.Types.Char,
                                                                                                                                                    GHC.Types.Char),
                                                                                                                                                   GHC.Types.Char),
                                                                                                                                                  GHC.Types.Char),
                                                                                                                                                 GHC.Types.Char))
  GHC.Show.$fShow(,) @ ((((GHC.Types.Char, GHC.Types.Char),
                          GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     $dShow
                     $dShow1
  = Tests.Transcript.$s$fShow(,)5
"SPEC/Tests.Transcript $fShow(,) @ (((Char, Char), Char),
                                   Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                         GHC.Types.Char)
                                                                                                                           ($dShow :: GHC.Show.Show
                                                                                                                                        (((GHC.Types.Char,
                                                                                                                                           GHC.Types.Char),
                                                                                                                                          GHC.Types.Char),
                                                                                                                                         GHC.Types.Char))
  GHC.Show.$fShow(,) @ (((GHC.Types.Char, GHC.Types.Char),
                         GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     $dShow
                     $dShow1
  = Tests.Transcript.$s$fShow(,)4
"SPEC/Tests.Transcript $fShow(,) @ ((Char, Char), Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                              GHC.Types.Char)
                                                                                ($dShow :: GHC.Show.Show
                                                                                             ((GHC.Types.Char,
                                                                                               GHC.Types.Char),
                                                                                              GHC.Types.Char))
  GHC.Show.$fShow(,) @ ((GHC.Types.Char, GHC.Types.Char),
                        GHC.Types.Char)
                     @ GHC.Types.Char
                     $dShow
                     $dShow1
  = Tests.Transcript.$s$fShow(,)3
"SPEC/Tests.Transcript $fShow(,) @ (Char, Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                      GHC.Types.Char)
                                                                        ($dShow :: GHC.Show.Show
                                                                                     (GHC.Types.Char,
                                                                                      GHC.Types.Char))
  GHC.Show.$fShow(,) @ (GHC.Types.Char, GHC.Types.Char)
                     @ GHC.Types.Char
                     $dShow
                     $dShow1
  = Tests.Transcript.$s$fShow(,)2
"SPEC/Tests.Transcript $fShow(,) @ Char @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                              GHC.Types.Char)
                                                                ($dShow :: GHC.Show.Show
                                                                             GHC.Types.Char)
  GHC.Show.$fShow(,) @ GHC.Types.Char @ GHC.Types.Char $dShow $dShow1
  = Tests.Transcript.$s$fShow(,)1
"SPEC/Tests.Transcript $fShow(,) @ Char @ [Char]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                [GHC.Types.Char])
                                                                  ($dShow :: GHC.Show.Show
                                                                               GHC.Types.Char)
  GHC.Show.$fShow(,) @ GHC.Types.Char
                     @ [GHC.Types.Char]
                     $dShow
                     $dShow1
  = Tests.Transcript.$s$fShow(,)
"SPEC/Tests.Transcript $fShow(,)_$cshow @ ((((((Char, Char), Char),
                                             Char),
                                            Char),
                                           Char),
                                          Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                   GHC.Types.Char)
                                                                                                                                                                                                                                                                                                     ($dShow :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                  ((((((GHC.Types.Char,
                                                                                                                                                                                                                                                                                                                        GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                       GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                      GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                     GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                    GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                   GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshow @ ((((((GHC.Types.Char, GHC.Types.Char),
                                   GHC.Types.Char),
                                  GHC.Types.Char),
                                 GHC.Types.Char),
                                GHC.Types.Char),
                               GHC.Types.Char)
                            @ GHC.Types.Char
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow7
"SPEC/Tests.Transcript $fShow(,)_$cshow @ (((((Char, Char), Char),
                                            Char),
                                           Char),
                                          Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                                                                              GHC.Types.Char)
                                                                                                                                                                                                                                                ($dShow :: GHC.Show.Show
                                                                                                                                                                                                                                                             (((((GHC.Types.Char,
                                                                                                                                                                                                                                                                  GHC.Types.Char),
                                                                                                                                                                                                                                                                 GHC.Types.Char),
                                                                                                                                                                                                                                                                GHC.Types.Char),
                                                                                                                                                                                                                                                               GHC.Types.Char),
                                                                                                                                                                                                                                                              GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshow @ (((((GHC.Types.Char, GHC.Types.Char),
                                  GHC.Types.Char),
                                 GHC.Types.Char),
                                GHC.Types.Char),
                               GHC.Types.Char)
                            @ GHC.Types.Char
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow6
"SPEC/Tests.Transcript $fShow(,)_$cshow @ ((((Char, Char), Char),
                                           Char),
                                          Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                          GHC.Types.Char)
                                                                                                                                                                                            ($dShow :: GHC.Show.Show
                                                                                                                                                                                                         ((((GHC.Types.Char,
                                                                                                                                                                                                             GHC.Types.Char),
                                                                                                                                                                                                            GHC.Types.Char),
                                                                                                                                                                                                           GHC.Types.Char),
                                                                                                                                                                                                          GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshow @ ((((GHC.Types.Char, GHC.Types.Char),
                                 GHC.Types.Char),
                                GHC.Types.Char),
                               GHC.Types.Char)
                            @ GHC.Types.Char
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow5
"SPEC/Tests.Transcript $fShow(,)_$cshow @ (((Char, Char), Char),
                                          Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                       GHC.Types.Char)
                                                                                                                                         ($dShow :: GHC.Show.Show
                                                                                                                                                      (((GHC.Types.Char,
                                                                                                                                                         GHC.Types.Char),
                                                                                                                                                        GHC.Types.Char),
                                                                                                                                                       GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshow @ (((GHC.Types.Char, GHC.Types.Char),
                                GHC.Types.Char),
                               GHC.Types.Char)
                            @ GHC.Types.Char
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow4
"SPEC/Tests.Transcript $fShow(,)_$cshow @ ((Char, Char),
                                          Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                               GHC.Types.Char)
                                                                                                                                 ($dShow :: GHC.Show.Show
                                                                                                                                              ((GHC.Types.Char,
                                                                                                                                                GHC.Types.Char),
                                                                                                                                               GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshow @ ((GHC.Types.Char, GHC.Types.Char),
                               GHC.Types.Char)
                            @ GHC.Types.Char
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow3
"SPEC/Tests.Transcript $fShow(,)_$cshow @ (Char, Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                             GHC.Types.Char)
                                                                               ($dShow :: GHC.Show.Show
                                                                                            (GHC.Types.Char,
                                                                                             GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshow @ (GHC.Types.Char, GHC.Types.Char)
                            @ GHC.Types.Char
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow2
"SPEC/Tests.Transcript $fShow(,)_$cshow @ Char @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                     GHC.Types.Char)
                                                                       ($dShow :: GHC.Show.Show
                                                                                    GHC.Types.Char)
  GHC.Show.$fShow(,)_$cshow @ GHC.Types.Char
                            @ GHC.Types.Char
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow1
"SPEC/Tests.Transcript $fShow(,)_$cshow @ Char @ [Char]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                       [GHC.Types.Char])
                                                                         ($dShow :: GHC.Show.Show
                                                                                      GHC.Types.Char)
  GHC.Show.$fShow(,)_$cshow @ GHC.Types.Char
                            @ [GHC.Types.Char]
                            $dShow
                            $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshow
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ ((((((Char, Char),
                                                  Char),
                                                 Char),
                                                Char),
                                               Char),
                                              Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                                                                                         GHC.Types.Char)
                                                                                                                                                                                                                                                                                                                                                                           ($dShow :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                                                                                        ((((((GHC.Types.Char,
                                                                                                                                                                                                                                                                                                                                                                                              GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                                                                             GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                                                                            GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                                                                           GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                                                                          GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                                                                         GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshowList @ ((((((GHC.Types.Char,
                                        GHC.Types.Char),
                                       GHC.Types.Char),
                                      GHC.Types.Char),
                                     GHC.Types.Char),
                                    GHC.Types.Char),
                                   GHC.Types.Char)
                                @ GHC.Types.Char
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList7
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ (((((Char, Char),
                                                 Char),
                                                Char),
                                               Char),
                                              Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                               GHC.Types.Char)
                                                                                                                                                                                                                                                                                                                 ($dShow :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                              (((((GHC.Types.Char,
                                                                                                                                                                                                                                                                                                                                   GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                  GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                 GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                                GHC.Types.Char),
                                                                                                                                                                                                                                                                                                                               GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshowList @ (((((GHC.Types.Char,
                                       GHC.Types.Char),
                                      GHC.Types.Char),
                                     GHC.Types.Char),
                                    GHC.Types.Char),
                                   GHC.Types.Char)
                                @ GHC.Types.Char
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList6
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ ((((Char, Char),
                                                Char),
                                               Char),
                                              Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                                                                                      GHC.Types.Char)
                                                                                                                                                                                                                                                        ($dShow :: GHC.Show.Show
                                                                                                                                                                                                                                                                     ((((GHC.Types.Char,
                                                                                                                                                                                                                                                                         GHC.Types.Char),
                                                                                                                                                                                                                                                                        GHC.Types.Char),
                                                                                                                                                                                                                                                                       GHC.Types.Char),
                                                                                                                                                                                                                                                                      GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshowList @ ((((GHC.Types.Char,
                                      GHC.Types.Char),
                                     GHC.Types.Char),
                                    GHC.Types.Char),
                                   GHC.Types.Char)
                                @ GHC.Types.Char
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList5
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ (((Char, Char), Char),
                                              Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                               GHC.Types.Char)
                                                                                                                                                 ($dShow :: GHC.Show.Show
                                                                                                                                                              (((GHC.Types.Char,
                                                                                                                                                                 GHC.Types.Char),
                                                                                                                                                                GHC.Types.Char),
                                                                                                                                                               GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshowList @ (((GHC.Types.Char, GHC.Types.Char),
                                    GHC.Types.Char),
                                   GHC.Types.Char)
                                @ GHC.Types.Char
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList4
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ ((Char, Char),
                                              Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                       GHC.Types.Char)
                                                                                                                                         ($dShow :: GHC.Show.Show
                                                                                                                                                      ((GHC.Types.Char,
                                                                                                                                                        GHC.Types.Char),
                                                                                                                                                       GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshowList @ ((GHC.Types.Char, GHC.Types.Char),
                                   GHC.Types.Char)
                                @ GHC.Types.Char
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList3
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ (Char, Char) @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                 GHC.Types.Char)
                                                                                   ($dShow :: GHC.Show.Show
                                                                                                (GHC.Types.Char,
                                                                                                 GHC.Types.Char))
  GHC.Show.$fShow(,)_$cshowList @ (GHC.Types.Char, GHC.Types.Char)
                                @ GHC.Types.Char
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList2
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ Char @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                         GHC.Types.Char)
                                                                           ($dShow :: GHC.Show.Show
                                                                                        GHC.Types.Char)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Types.Char
                                @ GHC.Types.Char
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList1
"SPEC/Tests.Transcript $fShow(,)_$cshowList @ Char @ [Char]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                           [GHC.Types.Char])
                                                                             ($dShow :: GHC.Show.Show
                                                                                          GHC.Types.Char)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Types.Char
                                @ [GHC.Types.Char]
                                $dShow
                                $dShow1
  = Tests.Transcript.$s$fShow(,)_$s$fShow(,)_$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

